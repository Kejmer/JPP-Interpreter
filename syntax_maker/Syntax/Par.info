-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Syntax/Par.y
-----------------------------------------------------------------------------

state 87 contains 1 reduce/reduce conflicts.
state 90 contains 3 shift/reduce conflicts.
state 91 contains 2 shift/reduce conflicts.
state 92 contains 6 shift/reduce conflicts.
state 93 contains 1 shift/reduce conflicts.
state 94 contains 1 shift/reduce conflicts.
state 95 contains 20 reduce/reduce conflicts.
state 144 contains 2 reduce/reduce conflicts.
state 145 contains 2 reduce/reduce conflicts.
state 146 contains 1 shift/reduce conflicts.
state 147 contains 1 shift/reduce conflicts.
state 148 contains 2 reduce/reduce conflicts.

rule 39 is unused
rule 40 is unused
rule 41 is unused
rule 56 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListStmt                                (4)
	Block -> 'do' ListStmt 'end'                       (5)
	HBlock -> PBlock                                   (6)
	HBlock -> Stmt                                     (7)
	Stmt -> Block                                      (8)
	Stmt -> BasicType 'mut' Ident '=' Expr             (9)
	Stmt -> BasicType Ident '=' Expr                   (10)
	Stmt -> Ident '=' Expr                             (11)
	Stmt -> Ident '[' Expr ']' '=' Expr                (12)
	Stmt -> 'return' Expr                              (13)
	Stmt -> 'if' '(' Expr ')' HBlock                   (14)
	Stmt -> 'if' '(' Expr ')' HBlock 'else' HBlock     (15)
	Stmt -> 'while' '(' Expr ')' HBlock                (16)
	Stmt -> 'print' '(' Expr ')'                       (17)
	Stmt -> 'for' Expr Proc                            (18)
	Stmt -> Expr                                       (19)
	Stmt -> Stmt ';'                                   (20)
	Stmt -> 'def' BasicType Ident '(' ListArg ')' PBlock   (21)
	Stmt -> 'def' BasicType Ident '(' ListArg ')' Lambda   (22)
	ListStmt ->                                        (23)
	ListStmt -> Stmt ';' ListStmt                      (24)
	Type -> '&' BasicType                              (25)
	Type -> '&mut' BasicType                           (26)
	Type -> 'mut' BasicType                            (27)
	Type -> BasicType                                  (28)
	ListType ->                                        (29)
	ListType -> Type                                   (30)
	ListType -> Type ',' ListType                      (31)
	BasicType -> BasicType '[]'                        (32)
	BasicType -> 'int'                                 (33)
	BasicType -> 'string'                              (34)
	BasicType -> 'bool'                                (35)
	BasicType -> 'void'                                (36)
	BasicType -> BasicType 'lambda' '(' ListType ')'   (37)
	BasicType -> BasicType 'proc' '(' ListType ')'     (38)
	ListBasicType ->                                   (39)
	ListBasicType -> BasicType                         (40)
	ListBasicType -> BasicType ',' ListBasicType       (41)
	Proc -> 'proc' '(' ListArg ')' Block               (42)
	Lambda -> BasicType 'lambda' '(' ListArg ')' Block   (43)
	PBlock -> Proc                                     (44)
	PBlock -> Block                                    (45)
	PBlock -> Ident                                    (46)
	Arg -> Type Ident                                  (47)
	ListArg ->                                         (48)
	ListArg -> Arg                                     (49)
	ListArg -> Arg ',' ListArg                         (50)
	Expr6 -> Ident                                     (51)
	Expr6 -> Integer                                   (52)
	Expr6 -> 'true'                                    (53)
	Expr6 -> 'false'                                   (54)
	Expr6 -> String                                    (55)
	Expr6 -> '(' Expr ')'                              (56)
	Expr6 -> Proc                                      (57)
	Expr6 -> Lambda                                    (58)
	Expr6 -> Expr6 '(' ListExpr ')'                    (59)
	Expr6 -> 'to_str' '(' Expr ')'                     (60)
	Expr6 -> '[' ListExpr ']'                          (61)
	Expr6 -> Ident '[' Expr ']'                        (62)
	Expr6 -> '(' Expr ')'                              (63)
	Expr5 -> '-' Expr6                                 (64)
	Expr5 -> '!' Expr5                                 (65)
	Expr5 -> Expr6                                     (66)
	Expr4 -> Expr4 MulOp Expr4                         (67)
	Expr4 -> Expr5                                     (68)
	Expr3 -> Expr3 AddOp Expr3                         (69)
	Expr3 -> Expr4                                     (70)
	Expr2 -> Expr2 CompOp Expr2                        (71)
	Expr2 -> Expr3                                     (72)
	Expr1 -> Expr1 '&&' Expr1                          (73)
	Expr1 -> Expr2                                     (74)
	Expr -> Expr '||' Expr                             (75)
	Expr -> Expr1                                      (76)
	ListExpr ->                                        (77)
	ListExpr -> Expr                                   (78)
	ListExpr -> Expr ',' ListExpr                      (79)
	AddOp -> '+'                                       (80)
	AddOp -> '-'                                       (81)
	MulOp -> '*'                                       (82)
	MulOp -> '/'                                       (83)
	MulOp -> '%'                                       (84)
	CompOp -> '<'                                      (85)
	CompOp -> '>'                                      (86)
	CompOp -> '<='                                     (87)
	CompOp -> '>='                                     (88)
	CompOp -> '=='                                     (89)
	CompOp -> '!='                                     (90)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'&mut'         { PT _ (TS _ 6) }
	'('            { PT _ (TS _ 7) }
	')'            { PT _ (TS _ 8) }
	'*'            { PT _ (TS _ 9) }
	'+'            { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'<'            { PT _ (TS _ 15) }
	'<='           { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'>'            { PT _ (TS _ 19) }
	'>='           { PT _ (TS _ 20) }
	'['            { PT _ (TS _ 21) }
	'[]'           { PT _ (TS _ 22) }
	']'            { PT _ (TS _ 23) }
	'bool'         { PT _ (TS _ 24) }
	'def'          { PT _ (TS _ 25) }
	'do'           { PT _ (TS _ 26) }
	'else'         { PT _ (TS _ 27) }
	'end'          { PT _ (TS _ 28) }
	'false'        { PT _ (TS _ 29) }
	'for'          { PT _ (TS _ 30) }
	'if'           { PT _ (TS _ 31) }
	'int'          { PT _ (TS _ 32) }
	'lambda'       { PT _ (TS _ 33) }
	'mut'          { PT _ (TS _ 34) }
	'print'        { PT _ (TS _ 35) }
	'proc'         { PT _ (TS _ 36) }
	'return'       { PT _ (TS _ 37) }
	'string'       { PT _ (TS _ 38) }
	'to_str'       { PT _ (TS _ 39) }
	'true'         { PT _ (TS _ 40) }
	'void'         { PT _ (TS _ 41) }
	'while'        { PT _ (TS _ 42) }
	'||'           { PT _ (TS _ 43) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Block           rule  5
	HBlock          rules 6, 7
	Stmt            rules 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
	ListStmt        rules 23, 24
	Type            rules 25, 26, 27, 28
	ListType        rules 29, 30, 31
	BasicType       rules 32, 33, 34, 35, 36, 37, 38
	ListBasicType   rules 39, 40, 41
	Proc            rule  42
	Lambda          rule  43
	PBlock          rules 44, 45, 46
	Arg             rule  47
	ListArg         rules 48, 49, 50
	Expr6           rules 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63
	Expr5           rules 64, 65, 66
	Expr4           rules 67, 68
	Expr3           rules 69, 70
	Expr2           rules 71, 72
	Expr1           rules 73, 74
	Expr            rules 75, 76
	ListExpr        rules 77, 78, 79
	AddOp           rules 80, 81
	MulOp           rules 82, 83, 84
	CompOp          rules 85, 86, 87, 88, 89, 90

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'def'          shift, and enter state 25
	'do'           shift, and enter state 26
	'false'        shift, and enter state 27
	'for'          shift, and enter state 28
	'if'           shift, and enter state 29
	'int'          shift, and enter state 30
	'print'        shift, and enter state 31
	'proc'         shift, and enter state 32
	'return'       shift, and enter state 33
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	'while'        shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40
	%eof           reduce using rule 23

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Program        goto state 6
	Block          goto state 7
	Stmt           goto state 8
	ListStmt       goto state 9
	BasicType      goto state 10
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 19

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'else'         reduce using rule 1
	'proc'         reduce using rule 1
	'||'           reduce using rule 1


State 3

	Stmt -> Ident . '=' Expr                            (rule 11)
	Stmt -> Ident . '[' Expr ']' '=' Expr               (rule 12)
	Expr6 -> Ident .                                    (rule 51)
	Expr6 -> Ident . '[' Expr ']'                       (rule 62)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	'('            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            shift, and enter state 80
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'['            shift, and enter state 81
	'||'           reduce using rule 51


State 4

	Expr6 -> Integer .                                  (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	']'            reduce using rule 52
	'else'         reduce using rule 52
	'proc'         reduce using rule 52
	'||'           reduce using rule 52


State 5

	Expr6 -> String .                                   (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	']'            reduce using rule 55
	'else'         reduce using rule 55
	'proc'         reduce using rule 55
	'||'           reduce using rule 55


State 6

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 7

	Stmt -> Block .                                     (rule 8)

	';'            reduce using rule 8


State 8

	Stmt -> Stmt . ';'                                  (rule 20)
	ListStmt -> Stmt . ';' ListStmt                     (rule 24)

	';'            shift, and enter state 79


State 9

	Program -> ListStmt .                               (rule 4)

	%eof           reduce using rule 4


State 10

	Stmt -> BasicType . 'mut' Ident '=' Expr            (rule 9)
	Stmt -> BasicType . Ident '=' Expr                  (rule 10)
	BasicType -> BasicType . '[]'                       (rule 32)
	BasicType -> BasicType . 'lambda' '(' ListType ')'    (rule 37)
	BasicType -> BasicType . 'proc' '(' ListType ')'    (rule 38)
	Lambda -> BasicType . 'lambda' '(' ListArg ')' Block    (rule 43)

	'[]'           shift, and enter state 75
	'lambda'       shift, and enter state 76
	'mut'          shift, and enter state 77
	'proc'         shift, and enter state 78
	L_Ident        shift, and enter state 2

	Ident          goto state 74

State 11

	Expr6 -> Proc .                                     (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	']'            reduce using rule 57
	'else'         reduce using rule 57
	'proc'         reduce using rule 57
	'||'           reduce using rule 57


State 12

	Expr6 -> Lambda .                                   (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	']'            reduce using rule 58
	'else'         reduce using rule 58
	'proc'         reduce using rule 58
	'||'           reduce using rule 58


State 13

	Expr6 -> Expr6 . '(' ListExpr ')'                   (rule 59)
	Expr5 -> Expr6 .                                    (rule 66)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&&'           reduce using rule 66
	'('            shift, and enter state 73
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'else'         reduce using rule 66
	'proc'         reduce using rule 66
	'||'           reduce using rule 66


State 14

	Expr4 -> Expr5 .                                    (rule 68)

	'!='           reduce using rule 68
	'%'            reduce using rule 68
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'*'            reduce using rule 68
	'+'            reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'/'            reduce using rule 68
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	']'            reduce using rule 68
	'else'         reduce using rule 68
	'proc'         reduce using rule 68
	'||'           reduce using rule 68


State 15

	Expr4 -> Expr4 . MulOp Expr4                        (rule 67)
	Expr3 -> Expr4 .                                    (rule 70)

	'!='           reduce using rule 70
	'%'            shift, and enter state 70
	'&&'           reduce using rule 70
	')'            reduce using rule 70
	'*'            shift, and enter state 71
	'+'            reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'/'            shift, and enter state 72
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	']'            reduce using rule 70
	'else'         reduce using rule 70
	'proc'         reduce using rule 70
	'||'           reduce using rule 70

	MulOp          goto state 69

State 16

	Expr3 -> Expr3 . AddOp Expr3                        (rule 69)
	Expr2 -> Expr3 .                                    (rule 72)

	'!='           reduce using rule 72
	'&&'           reduce using rule 72
	')'            reduce using rule 72
	'+'            shift, and enter state 67
	','            reduce using rule 72
	'-'            shift, and enter state 68
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	']'            reduce using rule 72
	'else'         reduce using rule 72
	'proc'         reduce using rule 72
	'||'           reduce using rule 72

	AddOp          goto state 66

State 17

	Expr2 -> Expr2 . CompOp Expr2                       (rule 71)
	Expr1 -> Expr2 .                                    (rule 74)

	'!='           shift, and enter state 60
	'&&'           reduce using rule 74
	')'            reduce using rule 74
	','            reduce using rule 74
	';'            reduce using rule 74
	'<'            shift, and enter state 61
	'<='           shift, and enter state 62
	'=='           shift, and enter state 63
	'>'            shift, and enter state 64
	'>='           shift, and enter state 65
	']'            reduce using rule 74
	'else'         reduce using rule 74
	'proc'         reduce using rule 74
	'||'           reduce using rule 74

	CompOp         goto state 59

State 18

	Expr1 -> Expr1 . '&&' Expr1                         (rule 73)
	Expr -> Expr1 .                                     (rule 76)

	'&&'           shift, and enter state 58
	')'            reduce using rule 76
	','            reduce using rule 76
	';'            reduce using rule 76
	']'            reduce using rule 76
	'else'         reduce using rule 76
	'proc'         reduce using rule 76
	'||'           reduce using rule 76


State 19

	Stmt -> Expr .                                      (rule 19)
	Expr -> Expr . '||' Expr                            (rule 75)

	';'            reduce using rule 19
	'else'         reduce using rule 19
	'||'           shift, and enter state 57


State 20

	Expr5 -> '!' . Expr5                                (rule 65)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 56

State 21

	Expr6 -> '(' . Expr ')'                             (rule 56)
	Expr6 -> '(' . Expr ')'                             (rule 63)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 55

State 22

	Expr5 -> '-' . Expr6                                (rule 64)

	'('            shift, and enter state 21
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 54

State 23

	Expr6 -> '[' . ListExpr ']'                         (rule 61)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	']'            reduce using rule 77
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 52
	ListExpr       goto state 53

State 24

	BasicType -> 'bool' .                               (rule 35)

	')'            reduce using rule 35
	','            reduce using rule 35
	'[]'           reduce using rule 35
	'lambda'       reduce using rule 35
	'mut'          reduce using rule 35
	'proc'         reduce using rule 35
	L_Ident        reduce using rule 35


State 25

	Stmt -> 'def' . BasicType Ident '(' ListArg ')' PBlock    (rule 21)
	Stmt -> 'def' . BasicType Ident '(' ListArg ')' Lambda    (rule 22)

	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'string'       shift, and enter state 34
	'void'         shift, and enter state 37

	BasicType      goto state 51

State 26

	Block -> 'do' . ListStmt 'end'                      (rule 5)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'def'          shift, and enter state 25
	'do'           shift, and enter state 26
	'end'          reduce using rule 23
	'false'        shift, and enter state 27
	'for'          shift, and enter state 28
	'if'           shift, and enter state 29
	'int'          shift, and enter state 30
	'print'        shift, and enter state 31
	'proc'         shift, and enter state 32
	'return'       shift, and enter state 33
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	'while'        shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	Stmt           goto state 8
	ListStmt       goto state 50
	BasicType      goto state 10
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 19

State 27

	Expr6 -> 'false' .                                  (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	']'            reduce using rule 54
	'else'         reduce using rule 54
	'proc'         reduce using rule 54
	'||'           reduce using rule 54


State 28

	Stmt -> 'for' . Expr Proc                           (rule 18)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 49

State 29

	Stmt -> 'if' . '(' Expr ')' HBlock                  (rule 14)
	Stmt -> 'if' . '(' Expr ')' HBlock 'else' HBlock    (rule 15)

	'('            shift, and enter state 48


State 30

	BasicType -> 'int' .                                (rule 33)

	')'            reduce using rule 33
	','            reduce using rule 33
	'[]'           reduce using rule 33
	'lambda'       reduce using rule 33
	'mut'          reduce using rule 33
	'proc'         reduce using rule 33
	L_Ident        reduce using rule 33


State 31

	Stmt -> 'print' . '(' Expr ')'                      (rule 17)

	'('            shift, and enter state 47


State 32

	Proc -> 'proc' . '(' ListArg ')' Block              (rule 42)

	'('            shift, and enter state 46


State 33

	Stmt -> 'return' . Expr                             (rule 13)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 45

State 34

	BasicType -> 'string' .                             (rule 34)

	')'            reduce using rule 34
	','            reduce using rule 34
	'[]'           reduce using rule 34
	'lambda'       reduce using rule 34
	'mut'          reduce using rule 34
	'proc'         reduce using rule 34
	L_Ident        reduce using rule 34


State 35

	Expr6 -> 'to_str' . '(' Expr ')'                    (rule 60)

	'('            shift, and enter state 42


State 36

	Expr6 -> 'true' .                                   (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	']'            reduce using rule 53
	'else'         reduce using rule 53
	'proc'         reduce using rule 53
	'||'           reduce using rule 53


State 37

	BasicType -> 'void' .                               (rule 36)

	')'            reduce using rule 36
	','            reduce using rule 36
	'[]'           reduce using rule 36
	'lambda'       reduce using rule 36
	'mut'          reduce using rule 36
	'proc'         reduce using rule 36
	L_Ident        reduce using rule 36


State 38

	Stmt -> 'while' . '(' Expr ')' HBlock               (rule 16)

	'('            shift, and enter state 41


State 39

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'else'         reduce using rule 2
	'proc'         reduce using rule 2
	'||'           reduce using rule 2


State 40

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'else'         reduce using rule 3
	'proc'         reduce using rule 3
	'||'           reduce using rule 3


State 41

	Stmt -> 'while' '(' . Expr ')' HBlock               (rule 16)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 113

State 42

	Expr6 -> 'to_str' '(' . Expr ')'                    (rule 60)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 112

State 43

	Expr6 -> Ident .                                    (rule 51)
	Expr6 -> Ident . '[' Expr ']'                       (rule 62)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'['            shift, and enter state 111
	']'            reduce using rule 51
	'else'         reduce using rule 51
	'proc'         reduce using rule 51
	'||'           reduce using rule 51


State 44

	BasicType -> BasicType . '[]'                       (rule 32)
	BasicType -> BasicType . 'lambda' '(' ListType ')'    (rule 37)
	BasicType -> BasicType . 'proc' '(' ListType ')'    (rule 38)
	Lambda -> BasicType . 'lambda' '(' ListArg ')' Block    (rule 43)

	'[]'           shift, and enter state 75
	'lambda'       shift, and enter state 76
	'proc'         shift, and enter state 78


State 45

	Stmt -> 'return' Expr .                             (rule 13)
	Expr -> Expr . '||' Expr                            (rule 75)

	';'            reduce using rule 13
	'else'         reduce using rule 13
	'||'           shift, and enter state 57


State 46

	Proc -> 'proc' '(' . ListArg ')' Block              (rule 42)

	'&'            shift, and enter state 108
	'&mut'         shift, and enter state 109
	')'            reduce using rule 48
	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'mut'          shift, and enter state 110
	'string'       shift, and enter state 34
	'void'         shift, and enter state 37

	Type           goto state 104
	BasicType      goto state 105
	Arg            goto state 106
	ListArg        goto state 107

State 47

	Stmt -> 'print' '(' . Expr ')'                      (rule 17)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 103

State 48

	Stmt -> 'if' '(' . Expr ')' HBlock                  (rule 14)
	Stmt -> 'if' '(' . Expr ')' HBlock 'else' HBlock    (rule 15)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 102

State 49

	Stmt -> 'for' Expr . Proc                           (rule 18)
	Expr -> Expr . '||' Expr                            (rule 75)

	'proc'         shift, and enter state 32
	'||'           shift, and enter state 57

	Proc           goto state 101

State 50

	Block -> 'do' ListStmt . 'end'                      (rule 5)

	'end'          shift, and enter state 100


State 51

	Stmt -> 'def' BasicType . Ident '(' ListArg ')' PBlock    (rule 21)
	Stmt -> 'def' BasicType . Ident '(' ListArg ')' Lambda    (rule 22)
	BasicType -> BasicType . '[]'                       (rule 32)
	BasicType -> BasicType . 'lambda' '(' ListType ')'    (rule 37)
	BasicType -> BasicType . 'proc' '(' ListType ')'    (rule 38)

	'[]'           shift, and enter state 75
	'lambda'       shift, and enter state 99
	'proc'         shift, and enter state 78
	L_Ident        shift, and enter state 2

	Ident          goto state 98

State 52

	Expr -> Expr . '||' Expr                            (rule 75)
	ListExpr -> Expr .                                  (rule 78)
	ListExpr -> Expr . ',' ListExpr                     (rule 79)

	')'            reduce using rule 78
	','            shift, and enter state 97
	']'            reduce using rule 78
	'||'           shift, and enter state 57


State 53

	Expr6 -> '[' ListExpr . ']'                         (rule 61)

	']'            shift, and enter state 96


State 54

	Expr6 -> Expr6 . '(' ListExpr ')'                   (rule 59)
	Expr5 -> '-' Expr6 .                                (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	'('            shift, and enter state 73
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	']'            reduce using rule 64
	'else'         reduce using rule 64
	'proc'         reduce using rule 64
	'||'           reduce using rule 64


State 55

	Expr6 -> '(' Expr . ')'                             (rule 56)
	Expr6 -> '(' Expr . ')'                             (rule 63)
	Expr -> Expr . '||' Expr                            (rule 75)

	')'            shift, and enter state 95
	'||'           shift, and enter state 57


State 56

	Expr5 -> '!' Expr5 .                                (rule 65)

	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	']'            reduce using rule 65
	'else'         reduce using rule 65
	'proc'         reduce using rule 65
	'||'           reduce using rule 65


State 57

	Expr -> Expr '||' . Expr                            (rule 75)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 94

State 58

	Expr1 -> Expr1 '&&' . Expr1                         (rule 73)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 93

State 59

	Expr2 -> Expr2 CompOp . Expr2                       (rule 71)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 92

State 60

	CompOp -> '!=' .                                    (rule 90)

	'!'            reduce using rule 90
	'('            reduce using rule 90
	'-'            reduce using rule 90
	'['            reduce using rule 90
	'bool'         reduce using rule 90
	'false'        reduce using rule 90
	'int'          reduce using rule 90
	'proc'         reduce using rule 90
	'string'       reduce using rule 90
	'to_str'       reduce using rule 90
	'true'         reduce using rule 90
	'void'         reduce using rule 90
	L_Ident        reduce using rule 90
	L_integ        reduce using rule 90
	L_quoted       reduce using rule 90


State 61

	CompOp -> '<' .                                     (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'['            reduce using rule 85
	'bool'         reduce using rule 85
	'false'        reduce using rule 85
	'int'          reduce using rule 85
	'proc'         reduce using rule 85
	'string'       reduce using rule 85
	'to_str'       reduce using rule 85
	'true'         reduce using rule 85
	'void'         reduce using rule 85
	L_Ident        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 62

	CompOp -> '<=' .                                    (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'-'            reduce using rule 87
	'['            reduce using rule 87
	'bool'         reduce using rule 87
	'false'        reduce using rule 87
	'int'          reduce using rule 87
	'proc'         reduce using rule 87
	'string'       reduce using rule 87
	'to_str'       reduce using rule 87
	'true'         reduce using rule 87
	'void'         reduce using rule 87
	L_Ident        reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87


State 63

	CompOp -> '==' .                                    (rule 89)

	'!'            reduce using rule 89
	'('            reduce using rule 89
	'-'            reduce using rule 89
	'['            reduce using rule 89
	'bool'         reduce using rule 89
	'false'        reduce using rule 89
	'int'          reduce using rule 89
	'proc'         reduce using rule 89
	'string'       reduce using rule 89
	'to_str'       reduce using rule 89
	'true'         reduce using rule 89
	'void'         reduce using rule 89
	L_Ident        reduce using rule 89
	L_integ        reduce using rule 89
	L_quoted       reduce using rule 89


State 64

	CompOp -> '>' .                                     (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'['            reduce using rule 86
	'bool'         reduce using rule 86
	'false'        reduce using rule 86
	'int'          reduce using rule 86
	'proc'         reduce using rule 86
	'string'       reduce using rule 86
	'to_str'       reduce using rule 86
	'true'         reduce using rule 86
	'void'         reduce using rule 86
	L_Ident        reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 65

	CompOp -> '>=' .                                    (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'-'            reduce using rule 88
	'['            reduce using rule 88
	'bool'         reduce using rule 88
	'false'        reduce using rule 88
	'int'          reduce using rule 88
	'proc'         reduce using rule 88
	'string'       reduce using rule 88
	'to_str'       reduce using rule 88
	'true'         reduce using rule 88
	'void'         reduce using rule 88
	L_Ident        reduce using rule 88
	L_integ        reduce using rule 88
	L_quoted       reduce using rule 88


State 66

	Expr3 -> Expr3 AddOp . Expr3                        (rule 69)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 91

State 67

	AddOp -> '+' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'['            reduce using rule 80
	'bool'         reduce using rule 80
	'false'        reduce using rule 80
	'int'          reduce using rule 80
	'proc'         reduce using rule 80
	'string'       reduce using rule 80
	'to_str'       reduce using rule 80
	'true'         reduce using rule 80
	'void'         reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 68

	AddOp -> '-' .                                      (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'['            reduce using rule 81
	'bool'         reduce using rule 81
	'false'        reduce using rule 81
	'int'          reduce using rule 81
	'proc'         reduce using rule 81
	'string'       reduce using rule 81
	'to_str'       reduce using rule 81
	'true'         reduce using rule 81
	'void'         reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 69

	Expr4 -> Expr4 MulOp . Expr4                        (rule 67)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 90

State 70

	MulOp -> '%' .                                      (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'['            reduce using rule 84
	'bool'         reduce using rule 84
	'false'        reduce using rule 84
	'int'          reduce using rule 84
	'proc'         reduce using rule 84
	'string'       reduce using rule 84
	'to_str'       reduce using rule 84
	'true'         reduce using rule 84
	'void'         reduce using rule 84
	L_Ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 71

	MulOp -> '*' .                                      (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'['            reduce using rule 82
	'bool'         reduce using rule 82
	'false'        reduce using rule 82
	'int'          reduce using rule 82
	'proc'         reduce using rule 82
	'string'       reduce using rule 82
	'to_str'       reduce using rule 82
	'true'         reduce using rule 82
	'void'         reduce using rule 82
	L_Ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 72

	MulOp -> '/' .                                      (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'['            reduce using rule 83
	'bool'         reduce using rule 83
	'false'        reduce using rule 83
	'int'          reduce using rule 83
	'proc'         reduce using rule 83
	'string'       reduce using rule 83
	'to_str'       reduce using rule 83
	'true'         reduce using rule 83
	'void'         reduce using rule 83
	L_Ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 73

	Expr6 -> Expr6 '(' . ListExpr ')'                   (rule 59)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	')'            reduce using rule 77
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 52
	ListExpr       goto state 89

State 74

	Stmt -> BasicType Ident . '=' Expr                  (rule 10)

	'='            shift, and enter state 88


State 75

	BasicType -> BasicType '[]' .                       (rule 32)

	')'            reduce using rule 32
	','            reduce using rule 32
	'[]'           reduce using rule 32
	'lambda'       reduce using rule 32
	'mut'          reduce using rule 32
	'proc'         reduce using rule 32
	L_Ident        reduce using rule 32


State 76

	BasicType -> BasicType 'lambda' . '(' ListType ')'    (rule 37)
	Lambda -> BasicType 'lambda' . '(' ListArg ')' Block    (rule 43)

	'('            shift, and enter state 87


State 77

	Stmt -> BasicType 'mut' . Ident '=' Expr            (rule 9)

	L_Ident        shift, and enter state 2

	Ident          goto state 86

State 78

	BasicType -> BasicType 'proc' . '(' ListType ')'    (rule 38)

	'('            shift, and enter state 85


State 79

	Stmt -> Stmt ';' .                                  (rule 20)
	ListStmt -> Stmt ';' . ListStmt                     (rule 24)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	';'            reduce using rule 20
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'def'          shift, and enter state 25
	'do'           shift, and enter state 26
	'end'          reduce using rule 23
	'false'        shift, and enter state 27
	'for'          shift, and enter state 28
	'if'           shift, and enter state 29
	'int'          shift, and enter state 30
	'print'        shift, and enter state 31
	'proc'         shift, and enter state 32
	'return'       shift, and enter state 33
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	'while'        shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40
	%eof           reduce using rule 23

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	Stmt           goto state 8
	ListStmt       goto state 84
	BasicType      goto state 10
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 19

State 80

	Stmt -> Ident '=' . Expr                            (rule 11)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 83

State 81

	Stmt -> Ident '[' . Expr ']' '=' Expr               (rule 12)
	Expr6 -> Ident '[' . Expr ']'                       (rule 62)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 82

State 82

	Stmt -> Ident '[' Expr . ']' '=' Expr               (rule 12)
	Expr6 -> Ident '[' Expr . ']'                       (rule 62)
	Expr -> Expr . '||' Expr                            (rule 75)

	']'            shift, and enter state 136
	'||'           shift, and enter state 57


State 83

	Stmt -> Ident '=' Expr .                            (rule 11)
	Expr -> Expr . '||' Expr                            (rule 75)

	';'            reduce using rule 11
	'else'         reduce using rule 11
	'||'           shift, and enter state 57


State 84

	ListStmt -> Stmt ';' ListStmt .                     (rule 24)

	'end'          reduce using rule 24
	%eof           reduce using rule 24


State 85

	BasicType -> BasicType 'proc' '(' . ListType ')'    (rule 38)

	'&'            shift, and enter state 108
	'&mut'         shift, and enter state 109
	')'            reduce using rule 29
	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'mut'          shift, and enter state 110
	'string'       shift, and enter state 34
	'void'         shift, and enter state 37

	Type           goto state 134
	ListType       goto state 135
	BasicType      goto state 105

State 86

	Stmt -> BasicType 'mut' Ident . '=' Expr            (rule 9)

	'='            shift, and enter state 133


State 87

	BasicType -> BasicType 'lambda' '(' . ListType ')'    (rule 37)
	Lambda -> BasicType 'lambda' '(' . ListArg ')' Block    (rule 43)

	'&'            shift, and enter state 108
	'&mut'         shift, and enter state 109
	')'            reduce using rule 48
			(reduce using rule 29)

	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'mut'          shift, and enter state 110
	'string'       shift, and enter state 34
	'void'         shift, and enter state 37

	Type           goto state 130
	ListType       goto state 131
	BasicType      goto state 105
	Arg            goto state 106
	ListArg        goto state 132

State 88

	Stmt -> BasicType Ident '=' . Expr                  (rule 10)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 129

State 89

	Expr6 -> Expr6 '(' ListExpr . ')'                   (rule 59)

	')'            shift, and enter state 128


State 90

	Expr4 -> Expr4 . MulOp Expr4                        (rule 67)
	Expr4 -> Expr4 MulOp Expr4 .                        (rule 67)

	'!='           reduce using rule 67
	'%'            shift, and enter state 70
			(reduce using rule 67)

	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'*'            shift, and enter state 71
			(reduce using rule 67)

	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'/'            shift, and enter state 72
			(reduce using rule 67)

	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'else'         reduce using rule 67
	'proc'         reduce using rule 67
	'||'           reduce using rule 67

	MulOp          goto state 69

State 91

	Expr3 -> Expr3 . AddOp Expr3                        (rule 69)
	Expr3 -> Expr3 AddOp Expr3 .                        (rule 69)

	'!='           reduce using rule 69
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	'+'            shift, and enter state 67
			(reduce using rule 69)

	','            reduce using rule 69
	'-'            shift, and enter state 68
			(reduce using rule 69)

	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	']'            reduce using rule 69
	'else'         reduce using rule 69
	'proc'         reduce using rule 69
	'||'           reduce using rule 69

	AddOp          goto state 66

State 92

	Expr2 -> Expr2 . CompOp Expr2                       (rule 71)
	Expr2 -> Expr2 CompOp Expr2 .                       (rule 71)

	'!='           shift, and enter state 60
			(reduce using rule 71)

	'&&'           reduce using rule 71
	')'            reduce using rule 71
	','            reduce using rule 71
	';'            reduce using rule 71
	'<'            shift, and enter state 61
			(reduce using rule 71)

	'<='           shift, and enter state 62
			(reduce using rule 71)

	'=='           shift, and enter state 63
			(reduce using rule 71)

	'>'            shift, and enter state 64
			(reduce using rule 71)

	'>='           shift, and enter state 65
			(reduce using rule 71)

	']'            reduce using rule 71
	'else'         reduce using rule 71
	'proc'         reduce using rule 71
	'||'           reduce using rule 71

	CompOp         goto state 59

State 93

	Expr1 -> Expr1 . '&&' Expr1                         (rule 73)
	Expr1 -> Expr1 '&&' Expr1 .                         (rule 73)

	'&&'           shift, and enter state 58
			(reduce using rule 73)

	')'            reduce using rule 73
	','            reduce using rule 73
	';'            reduce using rule 73
	']'            reduce using rule 73
	'else'         reduce using rule 73
	'proc'         reduce using rule 73
	'||'           reduce using rule 73


State 94

	Expr -> Expr . '||' Expr                            (rule 75)
	Expr -> Expr '||' Expr .                            (rule 75)

	')'            reduce using rule 75
	','            reduce using rule 75
	';'            reduce using rule 75
	']'            reduce using rule 75
	'else'         reduce using rule 75
	'proc'         reduce using rule 75
	'||'           shift, and enter state 57
			(reduce using rule 75)



State 95

	Expr6 -> '(' Expr ')' .                             (rule 56)
	Expr6 -> '(' Expr ')' .                             (rule 63)

	'!='           reduce using rule 63
			(reduce using rule 56)

	'%'            reduce using rule 63
			(reduce using rule 56)

	'&&'           reduce using rule 63
			(reduce using rule 56)

	'('            reduce using rule 63
			(reduce using rule 56)

	')'            reduce using rule 63
			(reduce using rule 56)

	'*'            reduce using rule 63
			(reduce using rule 56)

	'+'            reduce using rule 63
			(reduce using rule 56)

	','            reduce using rule 63
			(reduce using rule 56)

	'-'            reduce using rule 63
			(reduce using rule 56)

	'/'            reduce using rule 63
			(reduce using rule 56)

	';'            reduce using rule 63
			(reduce using rule 56)

	'<'            reduce using rule 63
			(reduce using rule 56)

	'<='           reduce using rule 63
			(reduce using rule 56)

	'=='           reduce using rule 63
			(reduce using rule 56)

	'>'            reduce using rule 63
			(reduce using rule 56)

	'>='           reduce using rule 63
			(reduce using rule 56)

	']'            reduce using rule 63
			(reduce using rule 56)

	'else'         reduce using rule 63
			(reduce using rule 56)

	'proc'         reduce using rule 63
			(reduce using rule 56)

	'||'           reduce using rule 63
			(reduce using rule 56)



State 96

	Expr6 -> '[' ListExpr ']' .                         (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	']'            reduce using rule 61
	'else'         reduce using rule 61
	'proc'         reduce using rule 61
	'||'           reduce using rule 61


State 97

	ListExpr -> Expr ',' . ListExpr                     (rule 79)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	')'            reduce using rule 77
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	']'            reduce using rule 77
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 52
	ListExpr       goto state 127

State 98

	Stmt -> 'def' BasicType Ident . '(' ListArg ')' PBlock    (rule 21)
	Stmt -> 'def' BasicType Ident . '(' ListArg ')' Lambda    (rule 22)

	'('            shift, and enter state 126


State 99

	BasicType -> BasicType 'lambda' . '(' ListType ')'    (rule 37)

	'('            shift, and enter state 125


State 100

	Block -> 'do' ListStmt 'end' .                      (rule 5)

	'!='           reduce using rule 5
	'%'            reduce using rule 5
	'&&'           reduce using rule 5
	'('            reduce using rule 5
	')'            reduce using rule 5
	'*'            reduce using rule 5
	'+'            reduce using rule 5
	','            reduce using rule 5
	'-'            reduce using rule 5
	'/'            reduce using rule 5
	';'            reduce using rule 5
	'<'            reduce using rule 5
	'<='           reduce using rule 5
	'=='           reduce using rule 5
	'>'            reduce using rule 5
	'>='           reduce using rule 5
	']'            reduce using rule 5
	'else'         reduce using rule 5
	'proc'         reduce using rule 5
	'||'           reduce using rule 5


State 101

	Stmt -> 'for' Expr Proc .                           (rule 18)

	';'            reduce using rule 18
	'else'         reduce using rule 18


State 102

	Stmt -> 'if' '(' Expr . ')' HBlock                  (rule 14)
	Stmt -> 'if' '(' Expr . ')' HBlock 'else' HBlock    (rule 15)
	Expr -> Expr . '||' Expr                            (rule 75)

	')'            shift, and enter state 124
	'||'           shift, and enter state 57


State 103

	Stmt -> 'print' '(' Expr . ')'                      (rule 17)
	Expr -> Expr . '||' Expr                            (rule 75)

	')'            shift, and enter state 123
	'||'           shift, and enter state 57


State 104

	Arg -> Type . Ident                                 (rule 47)

	L_Ident        shift, and enter state 2

	Ident          goto state 122

State 105

	Type -> BasicType .                                 (rule 28)
	BasicType -> BasicType . '[]'                       (rule 32)
	BasicType -> BasicType . 'lambda' '(' ListType ')'    (rule 37)
	BasicType -> BasicType . 'proc' '(' ListType ')'    (rule 38)

	')'            reduce using rule 28
	','            reduce using rule 28
	'[]'           shift, and enter state 75
	'lambda'       shift, and enter state 99
	'proc'         shift, and enter state 78
	L_Ident        reduce using rule 28


State 106

	ListArg -> Arg .                                    (rule 49)
	ListArg -> Arg . ',' ListArg                        (rule 50)

	')'            reduce using rule 49
	','            shift, and enter state 121


State 107

	Proc -> 'proc' '(' ListArg . ')' Block              (rule 42)

	')'            shift, and enter state 120


State 108

	Type -> '&' . BasicType                             (rule 25)

	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'string'       shift, and enter state 34
	'void'         shift, and enter state 37

	BasicType      goto state 119

State 109

	Type -> '&mut' . BasicType                          (rule 26)

	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'string'       shift, and enter state 34
	'void'         shift, and enter state 37

	BasicType      goto state 118

State 110

	Type -> 'mut' . BasicType                           (rule 27)

	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'string'       shift, and enter state 34
	'void'         shift, and enter state 37

	BasicType      goto state 117

State 111

	Expr6 -> Ident '[' . Expr ']'                       (rule 62)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 116

State 112

	Expr6 -> 'to_str' '(' Expr . ')'                    (rule 60)
	Expr -> Expr . '||' Expr                            (rule 75)

	')'            shift, and enter state 115
	'||'           shift, and enter state 57


State 113

	Stmt -> 'while' '(' Expr . ')' HBlock               (rule 16)
	Expr -> Expr . '||' Expr                            (rule 75)

	')'            shift, and enter state 114
	'||'           shift, and enter state 57


State 114

	Stmt -> 'while' '(' Expr ')' . HBlock               (rule 16)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'def'          shift, and enter state 25
	'do'           shift, and enter state 26
	'false'        shift, and enter state 27
	'for'          shift, and enter state 28
	'if'           shift, and enter state 29
	'int'          shift, and enter state 30
	'print'        shift, and enter state 31
	'proc'         shift, and enter state 32
	'return'       shift, and enter state 33
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	'while'        shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 144
	Integer        goto state 4
	String         goto state 5
	Block          goto state 145
	HBlock         goto state 153
	Stmt           goto state 147
	BasicType      goto state 10
	Proc           goto state 148
	Lambda         goto state 12
	PBlock         goto state 149
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 19

State 115

	Expr6 -> 'to_str' '(' Expr ')' .                    (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	']'            reduce using rule 60
	'else'         reduce using rule 60
	'proc'         reduce using rule 60
	'||'           reduce using rule 60


State 116

	Expr6 -> Ident '[' Expr . ']'                       (rule 62)
	Expr -> Expr . '||' Expr                            (rule 75)

	']'            shift, and enter state 152
	'||'           shift, and enter state 57


State 117

	Type -> 'mut' BasicType .                           (rule 27)
	BasicType -> BasicType . '[]'                       (rule 32)
	BasicType -> BasicType . 'lambda' '(' ListType ')'    (rule 37)
	BasicType -> BasicType . 'proc' '(' ListType ')'    (rule 38)

	')'            reduce using rule 27
	','            reduce using rule 27
	'[]'           shift, and enter state 75
	'lambda'       shift, and enter state 99
	'proc'         shift, and enter state 78
	L_Ident        reduce using rule 27


State 118

	Type -> '&mut' BasicType .                          (rule 26)
	BasicType -> BasicType . '[]'                       (rule 32)
	BasicType -> BasicType . 'lambda' '(' ListType ')'    (rule 37)
	BasicType -> BasicType . 'proc' '(' ListType ')'    (rule 38)

	')'            reduce using rule 26
	','            reduce using rule 26
	'[]'           shift, and enter state 75
	'lambda'       shift, and enter state 99
	'proc'         shift, and enter state 78
	L_Ident        reduce using rule 26


State 119

	Type -> '&' BasicType .                             (rule 25)
	BasicType -> BasicType . '[]'                       (rule 32)
	BasicType -> BasicType . 'lambda' '(' ListType ')'    (rule 37)
	BasicType -> BasicType . 'proc' '(' ListType ')'    (rule 38)

	')'            reduce using rule 25
	','            reduce using rule 25
	'[]'           shift, and enter state 75
	'lambda'       shift, and enter state 99
	'proc'         shift, and enter state 78
	L_Ident        reduce using rule 25


State 120

	Proc -> 'proc' '(' ListArg ')' . Block              (rule 42)

	'do'           shift, and enter state 26

	Block          goto state 151

State 121

	ListArg -> Arg ',' . ListArg                        (rule 50)

	'&'            shift, and enter state 108
	'&mut'         shift, and enter state 109
	')'            reduce using rule 48
	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'mut'          shift, and enter state 110
	'string'       shift, and enter state 34
	'void'         shift, and enter state 37

	Type           goto state 104
	BasicType      goto state 105
	Arg            goto state 106
	ListArg        goto state 150

State 122

	Arg -> Type Ident .                                 (rule 47)

	')'            reduce using rule 47
	','            reduce using rule 47


State 123

	Stmt -> 'print' '(' Expr ')' .                      (rule 17)

	';'            reduce using rule 17
	'else'         reduce using rule 17


State 124

	Stmt -> 'if' '(' Expr ')' . HBlock                  (rule 14)
	Stmt -> 'if' '(' Expr ')' . HBlock 'else' HBlock    (rule 15)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'def'          shift, and enter state 25
	'do'           shift, and enter state 26
	'false'        shift, and enter state 27
	'for'          shift, and enter state 28
	'if'           shift, and enter state 29
	'int'          shift, and enter state 30
	'print'        shift, and enter state 31
	'proc'         shift, and enter state 32
	'return'       shift, and enter state 33
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	'while'        shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 144
	Integer        goto state 4
	String         goto state 5
	Block          goto state 145
	HBlock         goto state 146
	Stmt           goto state 147
	BasicType      goto state 10
	Proc           goto state 148
	Lambda         goto state 12
	PBlock         goto state 149
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 19

State 125

	BasicType -> BasicType 'lambda' '(' . ListType ')'    (rule 37)

	'&'            shift, and enter state 108
	'&mut'         shift, and enter state 109
	')'            reduce using rule 29
	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'mut'          shift, and enter state 110
	'string'       shift, and enter state 34
	'void'         shift, and enter state 37

	Type           goto state 134
	ListType       goto state 131
	BasicType      goto state 105

State 126

	Stmt -> 'def' BasicType Ident '(' . ListArg ')' PBlock    (rule 21)
	Stmt -> 'def' BasicType Ident '(' . ListArg ')' Lambda    (rule 22)

	'&'            shift, and enter state 108
	'&mut'         shift, and enter state 109
	')'            reduce using rule 48
	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'mut'          shift, and enter state 110
	'string'       shift, and enter state 34
	'void'         shift, and enter state 37

	Type           goto state 104
	BasicType      goto state 105
	Arg            goto state 106
	ListArg        goto state 143

State 127

	ListExpr -> Expr ',' ListExpr .                     (rule 79)

	')'            reduce using rule 79
	']'            reduce using rule 79


State 128

	Expr6 -> Expr6 '(' ListExpr ')' .                   (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	']'            reduce using rule 59
	'else'         reduce using rule 59
	'proc'         reduce using rule 59
	'||'           reduce using rule 59


State 129

	Stmt -> BasicType Ident '=' Expr .                  (rule 10)
	Expr -> Expr . '||' Expr                            (rule 75)

	';'            reduce using rule 10
	'else'         reduce using rule 10
	'||'           shift, and enter state 57


State 130

	ListType -> Type .                                  (rule 30)
	ListType -> Type . ',' ListType                     (rule 31)
	Arg -> Type . Ident                                 (rule 47)

	')'            reduce using rule 30
	','            shift, and enter state 139
	L_Ident        shift, and enter state 2

	Ident          goto state 122

State 131

	BasicType -> BasicType 'lambda' '(' ListType . ')'    (rule 37)

	')'            shift, and enter state 142


State 132

	Lambda -> BasicType 'lambda' '(' ListArg . ')' Block    (rule 43)

	')'            shift, and enter state 141


State 133

	Stmt -> BasicType 'mut' Ident '=' . Expr            (rule 9)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 140

State 134

	ListType -> Type .                                  (rule 30)
	ListType -> Type . ',' ListType                     (rule 31)

	')'            reduce using rule 30
	','            shift, and enter state 139


State 135

	BasicType -> BasicType 'proc' '(' ListType . ')'    (rule 38)

	')'            shift, and enter state 138


State 136

	Stmt -> Ident '[' Expr ']' . '=' Expr               (rule 12)
	Expr6 -> Ident '[' Expr ']' .                       (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	'('            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	'-'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'='            shift, and enter state 137
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'else'         reduce using rule 62
	'||'           reduce using rule 62


State 137

	Stmt -> Ident '[' Expr ']' '=' . Expr               (rule 12)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 43
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 44
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 159

State 138

	BasicType -> BasicType 'proc' '(' ListType ')' .    (rule 38)

	')'            reduce using rule 38
	','            reduce using rule 38
	'[]'           reduce using rule 38
	'lambda'       reduce using rule 38
	'mut'          reduce using rule 38
	'proc'         reduce using rule 38
	L_Ident        reduce using rule 38


State 139

	ListType -> Type ',' . ListType                     (rule 31)

	'&'            shift, and enter state 108
	'&mut'         shift, and enter state 109
	')'            reduce using rule 29
	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'mut'          shift, and enter state 110
	'string'       shift, and enter state 34
	'void'         shift, and enter state 37

	Type           goto state 134
	ListType       goto state 158
	BasicType      goto state 105

State 140

	Stmt -> BasicType 'mut' Ident '=' Expr .            (rule 9)
	Expr -> Expr . '||' Expr                            (rule 75)

	';'            reduce using rule 9
	'else'         reduce using rule 9
	'||'           shift, and enter state 57


State 141

	Lambda -> BasicType 'lambda' '(' ListArg ')' . Block    (rule 43)

	'do'           shift, and enter state 26

	Block          goto state 157

State 142

	BasicType -> BasicType 'lambda' '(' ListType ')' .    (rule 37)

	')'            reduce using rule 37
	','            reduce using rule 37
	'[]'           reduce using rule 37
	'lambda'       reduce using rule 37
	'mut'          reduce using rule 37
	'proc'         reduce using rule 37
	L_Ident        reduce using rule 37


State 143

	Stmt -> 'def' BasicType Ident '(' ListArg . ')' PBlock    (rule 21)
	Stmt -> 'def' BasicType Ident '(' ListArg . ')' Lambda    (rule 22)

	')'            shift, and enter state 156


State 144

	Stmt -> Ident . '=' Expr                            (rule 11)
	Stmt -> Ident . '[' Expr ']' '=' Expr               (rule 12)
	PBlock -> Ident .                                   (rule 46)
	Expr6 -> Ident .                                    (rule 51)
	Expr6 -> Ident . '[' Expr ']'                       (rule 62)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	'('            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
			(reduce using rule 46)

	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            shift, and enter state 80
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'['            shift, and enter state 81
	'else'         reduce using rule 51
			(reduce using rule 46)

	'||'           reduce using rule 51


State 145

	Stmt -> Block .                                     (rule 8)
	PBlock -> Block .                                   (rule 45)

	';'            reduce using rule 45
			(reduce using rule 8)

	'else'         reduce using rule 45
			(reduce using rule 8)



State 146

	Stmt -> 'if' '(' Expr ')' HBlock .                  (rule 14)
	Stmt -> 'if' '(' Expr ')' HBlock . 'else' HBlock    (rule 15)

	';'            reduce using rule 14
	'else'         shift, and enter state 155
			(reduce using rule 14)



State 147

	HBlock -> Stmt .                                    (rule 7)
	Stmt -> Stmt . ';'                                  (rule 20)

	';'            shift, and enter state 154
			(reduce using rule 7)

	'else'         reduce using rule 7


State 148

	PBlock -> Proc .                                    (rule 44)
	Expr6 -> Proc .                                     (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	'('            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
			(reduce using rule 44)

	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'else'         reduce using rule 57
			(reduce using rule 44)

	'||'           reduce using rule 57


State 149

	HBlock -> PBlock .                                  (rule 6)

	';'            reduce using rule 6
	'else'         reduce using rule 6


State 150

	ListArg -> Arg ',' ListArg .                        (rule 50)

	')'            reduce using rule 50


State 151

	Proc -> 'proc' '(' ListArg ')' Block .              (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	']'            reduce using rule 42
	'else'         reduce using rule 42
	'proc'         reduce using rule 42
	'||'           reduce using rule 42


State 152

	Expr6 -> Ident '[' Expr ']' .                       (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	'('            reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	']'            reduce using rule 62
	'else'         reduce using rule 62
	'proc'         reduce using rule 62
	'||'           reduce using rule 62


State 153

	Stmt -> 'while' '(' Expr ')' HBlock .               (rule 16)

	';'            reduce using rule 16
	'else'         reduce using rule 16


State 154

	Stmt -> Stmt ';' .                                  (rule 20)

	';'            reduce using rule 20
	'else'         reduce using rule 20


State 155

	Stmt -> 'if' '(' Expr ')' HBlock 'else' . HBlock    (rule 15)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'def'          shift, and enter state 25
	'do'           shift, and enter state 26
	'false'        shift, and enter state 27
	'for'          shift, and enter state 28
	'if'           shift, and enter state 29
	'int'          shift, and enter state 30
	'print'        shift, and enter state 31
	'proc'         shift, and enter state 32
	'return'       shift, and enter state 33
	'string'       shift, and enter state 34
	'to_str'       shift, and enter state 35
	'true'         shift, and enter state 36
	'void'         shift, and enter state 37
	'while'        shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 39
	L_quoted       shift, and enter state 40

	Ident          goto state 144
	Integer        goto state 4
	String         goto state 5
	Block          goto state 145
	HBlock         goto state 165
	Stmt           goto state 147
	BasicType      goto state 10
	Proc           goto state 148
	Lambda         goto state 12
	PBlock         goto state 149
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 19

State 156

	Stmt -> 'def' BasicType Ident '(' ListArg ')' . PBlock    (rule 21)
	Stmt -> 'def' BasicType Ident '(' ListArg ')' . Lambda    (rule 22)

	'bool'         shift, and enter state 24
	'do'           shift, and enter state 26
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 34
	'void'         shift, and enter state 37
	L_Ident        shift, and enter state 2

	Ident          goto state 160
	Block          goto state 161
	BasicType      goto state 44
	Proc           goto state 162
	Lambda         goto state 163
	PBlock         goto state 164

State 157

	Lambda -> BasicType 'lambda' '(' ListArg ')' Block .    (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	']'            reduce using rule 43
	'else'         reduce using rule 43
	'proc'         reduce using rule 43
	'||'           reduce using rule 43


State 158

	ListType -> Type ',' ListType .                     (rule 31)

	')'            reduce using rule 31


State 159

	Stmt -> Ident '[' Expr ']' '=' Expr .               (rule 12)
	Expr -> Expr . '||' Expr                            (rule 75)

	';'            reduce using rule 12
	'else'         reduce using rule 12
	'||'           shift, and enter state 57


State 160

	PBlock -> Ident .                                   (rule 46)

	';'            reduce using rule 46
	'else'         reduce using rule 46


State 161

	PBlock -> Block .                                   (rule 45)

	';'            reduce using rule 45
	'else'         reduce using rule 45


State 162

	PBlock -> Proc .                                    (rule 44)

	';'            reduce using rule 44
	'else'         reduce using rule 44


State 163

	Stmt -> 'def' BasicType Ident '(' ListArg ')' Lambda .    (rule 22)

	';'            reduce using rule 22
	'else'         reduce using rule 22


State 164

	Stmt -> 'def' BasicType Ident '(' ListArg ')' PBlock .    (rule 21)

	';'            reduce using rule 21
	'else'         reduce using rule 21


State 165

	Stmt -> 'if' '(' Expr ')' HBlock 'else' HBlock .    (rule 15)

	';'            reduce using rule 15
	'else'         reduce using rule 15


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 91
Number of terminals: 46
Number of non-terminals: 29
Number of states: 166
