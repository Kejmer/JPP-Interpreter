-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Syntax/Par.y
-----------------------------------------------------------------------------

state 94 contains 3 shift/reduce conflicts.
state 95 contains 2 shift/reduce conflicts.
state 96 contains 6 shift/reduce conflicts.
state 97 contains 1 shift/reduce conflicts.
state 98 contains 1 shift/reduce conflicts.
state 99 contains 20 reduce/reduce conflicts.
state 147 contains 2 reduce/reduce conflicts.
state 148 contains 2 reduce/reduce conflicts.
state 149 contains 1 shift/reduce conflicts.
state 150 contains 1 shift/reduce conflicts.
state 151 contains 2 reduce/reduce conflicts.

rule 39 is unused
rule 40 is unused
rule 41 is unused
rule 57 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListStmt                                (4)
	Block -> 'do' ListStmt 'end'                       (5)
	HBlock -> PBlock                                   (6)
	HBlock -> Stmt                                     (7)
	Stmt -> Block                                      (8)
	Stmt -> BasicType 'mut' Ident '=' Expr             (9)
	Stmt -> BasicType Ident '=' Expr                   (10)
	Stmt -> Ident '=' Expr                             (11)
	Stmt -> Ident '[' Expr ']' '=' Expr                (12)
	Stmt -> 'return' Expr                              (13)
	Stmt -> 'if' '(' Expr ')' HBlock                   (14)
	Stmt -> 'if' '(' Expr ')' HBlock 'else' HBlock     (15)
	Stmt -> 'while' '(' Expr ')' HBlock                (16)
	Stmt -> 'print' '(' Expr ')'                       (17)
	Stmt -> 'for' Expr Proc                            (18)
	Stmt -> Expr                                       (19)
	Stmt -> Stmt ';'                                   (20)
	Stmt -> 'def' BasicType Ident '(' ListArg ')' PBlock   (21)
	Stmt -> 'def' BasicType Ident '(' ListArg ')' Lambda   (22)
	ListStmt ->                                        (23)
	ListStmt -> Stmt ';' ListStmt                      (24)
	Type -> '&' BasicType                              (25)
	Type -> '&mut' BasicType                           (26)
	Type -> 'mut' BasicType                            (27)
	Type -> BasicType                                  (28)
	ListType ->                                        (29)
	ListType -> Type                                   (30)
	ListType -> Type ',' ListType                      (31)
	BasicType -> BasicType '[]'                        (32)
	BasicType -> 'int'                                 (33)
	BasicType -> 'string'                              (34)
	BasicType -> 'bool'                                (35)
	BasicType -> 'void'                                (36)
	BasicType -> BasicType 'lambda_type' '(' ListType ')'   (37)
	BasicType -> BasicType 'proc_type' '[' ListArg ']' '(' ListType ')'   (38)
	ListBasicType ->                                   (39)
	ListBasicType -> BasicType                         (40)
	ListBasicType -> BasicType ',' ListBasicType       (41)
	Proc -> 'proc' '[' ListArg ']' '(' ListArg ')' Block   (42)
	Lambda -> BasicType 'lambda' '(' ListArg ')' Block   (43)
	PBlock -> Proc                                     (44)
	PBlock -> Block                                    (45)
	PBlock -> Ident                                    (46)
	Arg -> Type Ident                                  (47)
	ListArg ->                                         (48)
	ListArg -> Arg                                     (49)
	ListArg -> Arg ',' ListArg                         (50)
	Expr6 -> 'range' '(' Expr ',' Expr ')'             (51)
	Expr6 -> Ident                                     (52)
	Expr6 -> Integer                                   (53)
	Expr6 -> 'true'                                    (54)
	Expr6 -> 'false'                                   (55)
	Expr6 -> String                                    (56)
	Expr6 -> '(' Expr ')'                              (57)
	Expr6 -> Proc                                      (58)
	Expr6 -> Lambda                                    (59)
	Expr6 -> Expr6 '(' ListExpr ')'                    (60)
	Expr6 -> 'to_str' '(' Expr ')'                     (61)
	Expr6 -> '[' ListExpr ']'                          (62)
	Expr6 -> Ident '[' Expr ']'                        (63)
	Expr6 -> '(' Expr ')'                              (64)
	Expr5 -> '-' Expr6                                 (65)
	Expr5 -> '!' Expr5                                 (66)
	Expr5 -> Expr6                                     (67)
	Expr4 -> Expr4 MulOp Expr4                         (68)
	Expr4 -> Expr5                                     (69)
	Expr3 -> Expr3 AddOp Expr3                         (70)
	Expr3 -> Expr4                                     (71)
	Expr2 -> Expr2 CompOp Expr2                        (72)
	Expr2 -> Expr3                                     (73)
	Expr1 -> Expr1 '&&' Expr1                          (74)
	Expr1 -> Expr2                                     (75)
	Expr -> Expr '||' Expr                             (76)
	Expr -> Expr1                                      (77)
	ListExpr ->                                        (78)
	ListExpr -> Expr                                   (79)
	ListExpr -> Expr ',' ListExpr                      (80)
	AddOp -> '+'                                       (81)
	AddOp -> '-'                                       (82)
	MulOp -> '*'                                       (83)
	MulOp -> '/'                                       (84)
	MulOp -> '%'                                       (85)
	CompOp -> '<'                                      (86)
	CompOp -> '>'                                      (87)
	CompOp -> '<='                                     (88)
	CompOp -> '>='                                     (89)
	CompOp -> '=='                                     (90)
	CompOp -> '!='                                     (91)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'&mut'         { PT _ (TS _ 6) }
	'('            { PT _ (TS _ 7) }
	')'            { PT _ (TS _ 8) }
	'*'            { PT _ (TS _ 9) }
	'+'            { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'<'            { PT _ (TS _ 15) }
	'<='           { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'>'            { PT _ (TS _ 19) }
	'>='           { PT _ (TS _ 20) }
	'['            { PT _ (TS _ 21) }
	'[]'           { PT _ (TS _ 22) }
	']'            { PT _ (TS _ 23) }
	'bool'         { PT _ (TS _ 24) }
	'def'          { PT _ (TS _ 25) }
	'do'           { PT _ (TS _ 26) }
	'else'         { PT _ (TS _ 27) }
	'end'          { PT _ (TS _ 28) }
	'false'        { PT _ (TS _ 29) }
	'for'          { PT _ (TS _ 30) }
	'if'           { PT _ (TS _ 31) }
	'int'          { PT _ (TS _ 32) }
	'lambda'       { PT _ (TS _ 33) }
	'lambda_type'  { PT _ (TS _ 34) }
	'mut'          { PT _ (TS _ 35) }
	'print'        { PT _ (TS _ 36) }
	'proc'         { PT _ (TS _ 37) }
	'proc_type'    { PT _ (TS _ 38) }
	'range'        { PT _ (TS _ 39) }
	'return'       { PT _ (TS _ 40) }
	'string'       { PT _ (TS _ 41) }
	'to_str'       { PT _ (TS _ 42) }
	'true'         { PT _ (TS _ 43) }
	'void'         { PT _ (TS _ 44) }
	'while'        { PT _ (TS _ 45) }
	'||'           { PT _ (TS _ 46) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Block           rule  5
	HBlock          rules 6, 7
	Stmt            rules 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
	ListStmt        rules 23, 24
	Type            rules 25, 26, 27, 28
	ListType        rules 29, 30, 31
	BasicType       rules 32, 33, 34, 35, 36, 37, 38
	ListBasicType   rules 39, 40, 41
	Proc            rule  42
	Lambda          rule  43
	PBlock          rules 44, 45, 46
	Arg             rule  47
	ListArg         rules 48, 49, 50
	Expr6           rules 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
	Expr5           rules 65, 66, 67
	Expr4           rules 68, 69
	Expr3           rules 70, 71
	Expr2           rules 72, 73
	Expr1           rules 74, 75
	Expr            rules 76, 77
	ListExpr        rules 78, 79, 80
	AddOp           rules 81, 82
	MulOp           rules 83, 84, 85
	CompOp          rules 86, 87, 88, 89, 90, 91

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'def'          shift, and enter state 25
	'do'           shift, and enter state 26
	'false'        shift, and enter state 27
	'for'          shift, and enter state 28
	'if'           shift, and enter state 29
	'int'          shift, and enter state 30
	'print'        shift, and enter state 31
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'return'       shift, and enter state 34
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	'while'        shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41
	%eof           reduce using rule 23

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Program        goto state 6
	Block          goto state 7
	Stmt           goto state 8
	ListStmt       goto state 9
	BasicType      goto state 10
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 19

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'else'         reduce using rule 1
	'proc'         reduce using rule 1
	'||'           reduce using rule 1


State 3

	Stmt -> Ident . '=' Expr                            (rule 11)
	Stmt -> Ident . '[' Expr ']' '=' Expr               (rule 12)
	Expr6 -> Ident .                                    (rule 52)
	Expr6 -> Ident . '[' Expr ']'                       (rule 63)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	'('            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'='            shift, and enter state 83
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'['            shift, and enter state 84
	'||'           reduce using rule 52


State 4

	Expr6 -> Integer .                                  (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	']'            reduce using rule 53
	'else'         reduce using rule 53
	'proc'         reduce using rule 53
	'||'           reduce using rule 53


State 5

	Expr6 -> String .                                   (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	']'            reduce using rule 56
	'else'         reduce using rule 56
	'proc'         reduce using rule 56
	'||'           reduce using rule 56


State 6

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 7

	Stmt -> Block .                                     (rule 8)

	';'            reduce using rule 8


State 8

	Stmt -> Stmt . ';'                                  (rule 20)
	ListStmt -> Stmt . ';' ListStmt                     (rule 24)

	';'            shift, and enter state 82


State 9

	Program -> ListStmt .                               (rule 4)

	%eof           reduce using rule 4


State 10

	Stmt -> BasicType . 'mut' Ident '=' Expr            (rule 9)
	Stmt -> BasicType . Ident '=' Expr                  (rule 10)
	BasicType -> BasicType . '[]'                       (rule 32)
	BasicType -> BasicType . 'lambda_type' '(' ListType ')'    (rule 37)
	BasicType -> BasicType . 'proc_type' '[' ListArg ']' '(' ListType ')'    (rule 38)
	Lambda -> BasicType . 'lambda' '(' ListArg ')' Block    (rule 43)

	'[]'           shift, and enter state 77
	'lambda'       shift, and enter state 78
	'lambda_type'  shift, and enter state 79
	'mut'          shift, and enter state 80
	'proc_type'    shift, and enter state 81
	L_Ident        shift, and enter state 2

	Ident          goto state 76

State 11

	Expr6 -> Proc .                                     (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	']'            reduce using rule 58
	'else'         reduce using rule 58
	'proc'         reduce using rule 58
	'||'           reduce using rule 58


State 12

	Expr6 -> Lambda .                                   (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	']'            reduce using rule 59
	'else'         reduce using rule 59
	'proc'         reduce using rule 59
	'||'           reduce using rule 59


State 13

	Expr6 -> Expr6 . '(' ListExpr ')'                   (rule 60)
	Expr5 -> Expr6 .                                    (rule 67)

	'!='           reduce using rule 67
	'%'            reduce using rule 67
	'&&'           reduce using rule 67
	'('            shift, and enter state 75
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'/'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'else'         reduce using rule 67
	'proc'         reduce using rule 67
	'||'           reduce using rule 67


State 14

	Expr4 -> Expr5 .                                    (rule 69)

	'!='           reduce using rule 69
	'%'            reduce using rule 69
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	'*'            reduce using rule 69
	'+'            reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'/'            reduce using rule 69
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	']'            reduce using rule 69
	'else'         reduce using rule 69
	'proc'         reduce using rule 69
	'||'           reduce using rule 69


State 15

	Expr4 -> Expr4 . MulOp Expr4                        (rule 68)
	Expr3 -> Expr4 .                                    (rule 71)

	'!='           reduce using rule 71
	'%'            shift, and enter state 72
	'&&'           reduce using rule 71
	')'            reduce using rule 71
	'*'            shift, and enter state 73
	'+'            reduce using rule 71
	','            reduce using rule 71
	'-'            reduce using rule 71
	'/'            shift, and enter state 74
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	']'            reduce using rule 71
	'else'         reduce using rule 71
	'proc'         reduce using rule 71
	'||'           reduce using rule 71

	MulOp          goto state 71

State 16

	Expr3 -> Expr3 . AddOp Expr3                        (rule 70)
	Expr2 -> Expr3 .                                    (rule 73)

	'!='           reduce using rule 73
	'&&'           reduce using rule 73
	')'            reduce using rule 73
	'+'            shift, and enter state 69
	','            reduce using rule 73
	'-'            shift, and enter state 70
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	']'            reduce using rule 73
	'else'         reduce using rule 73
	'proc'         reduce using rule 73
	'||'           reduce using rule 73

	AddOp          goto state 68

State 17

	Expr2 -> Expr2 . CompOp Expr2                       (rule 72)
	Expr1 -> Expr2 .                                    (rule 75)

	'!='           shift, and enter state 62
	'&&'           reduce using rule 75
	')'            reduce using rule 75
	','            reduce using rule 75
	';'            reduce using rule 75
	'<'            shift, and enter state 63
	'<='           shift, and enter state 64
	'=='           shift, and enter state 65
	'>'            shift, and enter state 66
	'>='           shift, and enter state 67
	']'            reduce using rule 75
	'else'         reduce using rule 75
	'proc'         reduce using rule 75
	'||'           reduce using rule 75

	CompOp         goto state 61

State 18

	Expr1 -> Expr1 . '&&' Expr1                         (rule 74)
	Expr -> Expr1 .                                     (rule 77)

	'&&'           shift, and enter state 60
	')'            reduce using rule 77
	','            reduce using rule 77
	';'            reduce using rule 77
	']'            reduce using rule 77
	'else'         reduce using rule 77
	'proc'         reduce using rule 77
	'||'           reduce using rule 77


State 19

	Stmt -> Expr .                                      (rule 19)
	Expr -> Expr . '||' Expr                            (rule 76)

	';'            reduce using rule 19
	'else'         reduce using rule 19
	'||'           shift, and enter state 59


State 20

	Expr5 -> '!' . Expr5                                (rule 66)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 58

State 21

	Expr6 -> '(' . Expr ')'                             (rule 57)
	Expr6 -> '(' . Expr ')'                             (rule 64)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 57

State 22

	Expr5 -> '-' . Expr6                                (rule 65)

	'('            shift, and enter state 21
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 56

State 23

	Expr6 -> '[' . ListExpr ']'                         (rule 62)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	']'            reduce using rule 78
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 54
	ListExpr       goto state 55

State 24

	BasicType -> 'bool' .                               (rule 35)

	')'            reduce using rule 35
	','            reduce using rule 35
	'[]'           reduce using rule 35
	'lambda'       reduce using rule 35
	'lambda_type'  reduce using rule 35
	'mut'          reduce using rule 35
	'proc_type'    reduce using rule 35
	L_Ident        reduce using rule 35


State 25

	Stmt -> 'def' . BasicType Ident '(' ListArg ')' PBlock    (rule 21)
	Stmt -> 'def' . BasicType Ident '(' ListArg ')' Lambda    (rule 22)

	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'string'       shift, and enter state 35
	'void'         shift, and enter state 38

	BasicType      goto state 53

State 26

	Block -> 'do' . ListStmt 'end'                      (rule 5)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'def'          shift, and enter state 25
	'do'           shift, and enter state 26
	'end'          reduce using rule 23
	'false'        shift, and enter state 27
	'for'          shift, and enter state 28
	'if'           shift, and enter state 29
	'int'          shift, and enter state 30
	'print'        shift, and enter state 31
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'return'       shift, and enter state 34
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	'while'        shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	Stmt           goto state 8
	ListStmt       goto state 52
	BasicType      goto state 10
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 19

State 27

	Expr6 -> 'false' .                                  (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	']'            reduce using rule 55
	'else'         reduce using rule 55
	'proc'         reduce using rule 55
	'||'           reduce using rule 55


State 28

	Stmt -> 'for' . Expr Proc                           (rule 18)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 51

State 29

	Stmt -> 'if' . '(' Expr ')' HBlock                  (rule 14)
	Stmt -> 'if' . '(' Expr ')' HBlock 'else' HBlock    (rule 15)

	'('            shift, and enter state 50


State 30

	BasicType -> 'int' .                                (rule 33)

	')'            reduce using rule 33
	','            reduce using rule 33
	'[]'           reduce using rule 33
	'lambda'       reduce using rule 33
	'lambda_type'  reduce using rule 33
	'mut'          reduce using rule 33
	'proc_type'    reduce using rule 33
	L_Ident        reduce using rule 33


State 31

	Stmt -> 'print' . '(' Expr ')'                      (rule 17)

	'('            shift, and enter state 49


State 32

	Proc -> 'proc' . '[' ListArg ']' '(' ListArg ')' Block    (rule 42)

	'['            shift, and enter state 48


State 33

	Expr6 -> 'range' . '(' Expr ',' Expr ')'            (rule 51)

	'('            shift, and enter state 47


State 34

	Stmt -> 'return' . Expr                             (rule 13)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 46

State 35

	BasicType -> 'string' .                             (rule 34)

	')'            reduce using rule 34
	','            reduce using rule 34
	'[]'           reduce using rule 34
	'lambda'       reduce using rule 34
	'lambda_type'  reduce using rule 34
	'mut'          reduce using rule 34
	'proc_type'    reduce using rule 34
	L_Ident        reduce using rule 34


State 36

	Expr6 -> 'to_str' . '(' Expr ')'                    (rule 61)

	'('            shift, and enter state 43


State 37

	Expr6 -> 'true' .                                   (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	']'            reduce using rule 54
	'else'         reduce using rule 54
	'proc'         reduce using rule 54
	'||'           reduce using rule 54


State 38

	BasicType -> 'void' .                               (rule 36)

	')'            reduce using rule 36
	','            reduce using rule 36
	'[]'           reduce using rule 36
	'lambda'       reduce using rule 36
	'lambda_type'  reduce using rule 36
	'mut'          reduce using rule 36
	'proc_type'    reduce using rule 36
	L_Ident        reduce using rule 36


State 39

	Stmt -> 'while' . '(' Expr ')' HBlock               (rule 16)

	'('            shift, and enter state 42


State 40

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'else'         reduce using rule 2
	'proc'         reduce using rule 2
	'||'           reduce using rule 2


State 41

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'else'         reduce using rule 3
	'proc'         reduce using rule 3
	'||'           reduce using rule 3


State 42

	Stmt -> 'while' '(' . Expr ')' HBlock               (rule 16)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 117

State 43

	Expr6 -> 'to_str' '(' . Expr ')'                    (rule 61)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 116

State 44

	Expr6 -> Ident .                                    (rule 52)
	Expr6 -> Ident . '[' Expr ']'                       (rule 63)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'['            shift, and enter state 115
	']'            reduce using rule 52
	'else'         reduce using rule 52
	'proc'         reduce using rule 52
	'||'           reduce using rule 52


State 45

	BasicType -> BasicType . '[]'                       (rule 32)
	BasicType -> BasicType . 'lambda_type' '(' ListType ')'    (rule 37)
	BasicType -> BasicType . 'proc_type' '[' ListArg ']' '(' ListType ')'    (rule 38)
	Lambda -> BasicType . 'lambda' '(' ListArg ')' Block    (rule 43)

	'[]'           shift, and enter state 77
	'lambda'       shift, and enter state 78
	'lambda_type'  shift, and enter state 79
	'proc_type'    shift, and enter state 81


State 46

	Stmt -> 'return' Expr .                             (rule 13)
	Expr -> Expr . '||' Expr                            (rule 76)

	';'            reduce using rule 13
	'else'         reduce using rule 13
	'||'           shift, and enter state 59


State 47

	Expr6 -> 'range' '(' . Expr ',' Expr ')'            (rule 51)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 114

State 48

	Proc -> 'proc' '[' . ListArg ']' '(' ListArg ')' Block    (rule 42)

	'&'            shift, and enter state 111
	'&mut'         shift, and enter state 112
	']'            reduce using rule 48
	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'mut'          shift, and enter state 113
	'string'       shift, and enter state 35
	'void'         shift, and enter state 38

	Type           goto state 107
	BasicType      goto state 108
	Arg            goto state 109
	ListArg        goto state 110

State 49

	Stmt -> 'print' '(' . Expr ')'                      (rule 17)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 106

State 50

	Stmt -> 'if' '(' . Expr ')' HBlock                  (rule 14)
	Stmt -> 'if' '(' . Expr ')' HBlock 'else' HBlock    (rule 15)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 105

State 51

	Stmt -> 'for' Expr . Proc                           (rule 18)
	Expr -> Expr . '||' Expr                            (rule 76)

	'proc'         shift, and enter state 32
	'||'           shift, and enter state 59

	Proc           goto state 104

State 52

	Block -> 'do' ListStmt . 'end'                      (rule 5)

	'end'          shift, and enter state 103


State 53

	Stmt -> 'def' BasicType . Ident '(' ListArg ')' PBlock    (rule 21)
	Stmt -> 'def' BasicType . Ident '(' ListArg ')' Lambda    (rule 22)
	BasicType -> BasicType . '[]'                       (rule 32)
	BasicType -> BasicType . 'lambda_type' '(' ListType ')'    (rule 37)
	BasicType -> BasicType . 'proc_type' '[' ListArg ']' '(' ListType ')'    (rule 38)

	'[]'           shift, and enter state 77
	'lambda_type'  shift, and enter state 79
	'proc_type'    shift, and enter state 81
	L_Ident        shift, and enter state 2

	Ident          goto state 102

State 54

	Expr -> Expr . '||' Expr                            (rule 76)
	ListExpr -> Expr .                                  (rule 79)
	ListExpr -> Expr . ',' ListExpr                     (rule 80)

	')'            reduce using rule 79
	','            shift, and enter state 101
	']'            reduce using rule 79
	'||'           shift, and enter state 59


State 55

	Expr6 -> '[' ListExpr . ']'                         (rule 62)

	']'            shift, and enter state 100


State 56

	Expr6 -> Expr6 . '(' ListExpr ')'                   (rule 60)
	Expr5 -> '-' Expr6 .                                (rule 65)

	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&&'           reduce using rule 65
	'('            shift, and enter state 75
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	']'            reduce using rule 65
	'else'         reduce using rule 65
	'proc'         reduce using rule 65
	'||'           reduce using rule 65


State 57

	Expr6 -> '(' Expr . ')'                             (rule 57)
	Expr6 -> '(' Expr . ')'                             (rule 64)
	Expr -> Expr . '||' Expr                            (rule 76)

	')'            shift, and enter state 99
	'||'           shift, and enter state 59


State 58

	Expr5 -> '!' Expr5 .                                (rule 66)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'else'         reduce using rule 66
	'proc'         reduce using rule 66
	'||'           reduce using rule 66


State 59

	Expr -> Expr '||' . Expr                            (rule 76)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 98

State 60

	Expr1 -> Expr1 '&&' . Expr1                         (rule 74)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 97

State 61

	Expr2 -> Expr2 CompOp . Expr2                       (rule 72)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 96

State 62

	CompOp -> '!=' .                                    (rule 91)

	'!'            reduce using rule 91
	'('            reduce using rule 91
	'-'            reduce using rule 91
	'['            reduce using rule 91
	'bool'         reduce using rule 91
	'false'        reduce using rule 91
	'int'          reduce using rule 91
	'proc'         reduce using rule 91
	'range'        reduce using rule 91
	'string'       reduce using rule 91
	'to_str'       reduce using rule 91
	'true'         reduce using rule 91
	'void'         reduce using rule 91
	L_Ident        reduce using rule 91
	L_integ        reduce using rule 91
	L_quoted       reduce using rule 91


State 63

	CompOp -> '<' .                                     (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'['            reduce using rule 86
	'bool'         reduce using rule 86
	'false'        reduce using rule 86
	'int'          reduce using rule 86
	'proc'         reduce using rule 86
	'range'        reduce using rule 86
	'string'       reduce using rule 86
	'to_str'       reduce using rule 86
	'true'         reduce using rule 86
	'void'         reduce using rule 86
	L_Ident        reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 64

	CompOp -> '<=' .                                    (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'-'            reduce using rule 88
	'['            reduce using rule 88
	'bool'         reduce using rule 88
	'false'        reduce using rule 88
	'int'          reduce using rule 88
	'proc'         reduce using rule 88
	'range'        reduce using rule 88
	'string'       reduce using rule 88
	'to_str'       reduce using rule 88
	'true'         reduce using rule 88
	'void'         reduce using rule 88
	L_Ident        reduce using rule 88
	L_integ        reduce using rule 88
	L_quoted       reduce using rule 88


State 65

	CompOp -> '==' .                                    (rule 90)

	'!'            reduce using rule 90
	'('            reduce using rule 90
	'-'            reduce using rule 90
	'['            reduce using rule 90
	'bool'         reduce using rule 90
	'false'        reduce using rule 90
	'int'          reduce using rule 90
	'proc'         reduce using rule 90
	'range'        reduce using rule 90
	'string'       reduce using rule 90
	'to_str'       reduce using rule 90
	'true'         reduce using rule 90
	'void'         reduce using rule 90
	L_Ident        reduce using rule 90
	L_integ        reduce using rule 90
	L_quoted       reduce using rule 90


State 66

	CompOp -> '>' .                                     (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'-'            reduce using rule 87
	'['            reduce using rule 87
	'bool'         reduce using rule 87
	'false'        reduce using rule 87
	'int'          reduce using rule 87
	'proc'         reduce using rule 87
	'range'        reduce using rule 87
	'string'       reduce using rule 87
	'to_str'       reduce using rule 87
	'true'         reduce using rule 87
	'void'         reduce using rule 87
	L_Ident        reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87


State 67

	CompOp -> '>=' .                                    (rule 89)

	'!'            reduce using rule 89
	'('            reduce using rule 89
	'-'            reduce using rule 89
	'['            reduce using rule 89
	'bool'         reduce using rule 89
	'false'        reduce using rule 89
	'int'          reduce using rule 89
	'proc'         reduce using rule 89
	'range'        reduce using rule 89
	'string'       reduce using rule 89
	'to_str'       reduce using rule 89
	'true'         reduce using rule 89
	'void'         reduce using rule 89
	L_Ident        reduce using rule 89
	L_integ        reduce using rule 89
	L_quoted       reduce using rule 89


State 68

	Expr3 -> Expr3 AddOp . Expr3                        (rule 70)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 95

State 69

	AddOp -> '+' .                                      (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'['            reduce using rule 81
	'bool'         reduce using rule 81
	'false'        reduce using rule 81
	'int'          reduce using rule 81
	'proc'         reduce using rule 81
	'range'        reduce using rule 81
	'string'       reduce using rule 81
	'to_str'       reduce using rule 81
	'true'         reduce using rule 81
	'void'         reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 70

	AddOp -> '-' .                                      (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'['            reduce using rule 82
	'bool'         reduce using rule 82
	'false'        reduce using rule 82
	'int'          reduce using rule 82
	'proc'         reduce using rule 82
	'range'        reduce using rule 82
	'string'       reduce using rule 82
	'to_str'       reduce using rule 82
	'true'         reduce using rule 82
	'void'         reduce using rule 82
	L_Ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 71

	Expr4 -> Expr4 MulOp . Expr4                        (rule 68)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 94

State 72

	MulOp -> '%' .                                      (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'['            reduce using rule 85
	'bool'         reduce using rule 85
	'false'        reduce using rule 85
	'int'          reduce using rule 85
	'proc'         reduce using rule 85
	'range'        reduce using rule 85
	'string'       reduce using rule 85
	'to_str'       reduce using rule 85
	'true'         reduce using rule 85
	'void'         reduce using rule 85
	L_Ident        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 73

	MulOp -> '*' .                                      (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'['            reduce using rule 83
	'bool'         reduce using rule 83
	'false'        reduce using rule 83
	'int'          reduce using rule 83
	'proc'         reduce using rule 83
	'range'        reduce using rule 83
	'string'       reduce using rule 83
	'to_str'       reduce using rule 83
	'true'         reduce using rule 83
	'void'         reduce using rule 83
	L_Ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 74

	MulOp -> '/' .                                      (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'['            reduce using rule 84
	'bool'         reduce using rule 84
	'false'        reduce using rule 84
	'int'          reduce using rule 84
	'proc'         reduce using rule 84
	'range'        reduce using rule 84
	'string'       reduce using rule 84
	'to_str'       reduce using rule 84
	'true'         reduce using rule 84
	'void'         reduce using rule 84
	L_Ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 75

	Expr6 -> Expr6 '(' . ListExpr ')'                   (rule 60)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	')'            reduce using rule 78
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 54
	ListExpr       goto state 93

State 76

	Stmt -> BasicType Ident . '=' Expr                  (rule 10)

	'='            shift, and enter state 92


State 77

	BasicType -> BasicType '[]' .                       (rule 32)

	')'            reduce using rule 32
	','            reduce using rule 32
	'[]'           reduce using rule 32
	'lambda'       reduce using rule 32
	'lambda_type'  reduce using rule 32
	'mut'          reduce using rule 32
	'proc_type'    reduce using rule 32
	L_Ident        reduce using rule 32


State 78

	Lambda -> BasicType 'lambda' . '(' ListArg ')' Block    (rule 43)

	'('            shift, and enter state 91


State 79

	BasicType -> BasicType 'lambda_type' . '(' ListType ')'    (rule 37)

	'('            shift, and enter state 90


State 80

	Stmt -> BasicType 'mut' . Ident '=' Expr            (rule 9)

	L_Ident        shift, and enter state 2

	Ident          goto state 89

State 81

	BasicType -> BasicType 'proc_type' . '[' ListArg ']' '(' ListType ')'    (rule 38)

	'['            shift, and enter state 88


State 82

	Stmt -> Stmt ';' .                                  (rule 20)
	ListStmt -> Stmt ';' . ListStmt                     (rule 24)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	';'            reduce using rule 20
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'def'          shift, and enter state 25
	'do'           shift, and enter state 26
	'end'          reduce using rule 23
	'false'        shift, and enter state 27
	'for'          shift, and enter state 28
	'if'           shift, and enter state 29
	'int'          shift, and enter state 30
	'print'        shift, and enter state 31
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'return'       shift, and enter state 34
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	'while'        shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41
	%eof           reduce using rule 23

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	Stmt           goto state 8
	ListStmt       goto state 87
	BasicType      goto state 10
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 19

State 83

	Stmt -> Ident '=' . Expr                            (rule 11)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 86

State 84

	Stmt -> Ident '[' . Expr ']' '=' Expr               (rule 12)
	Expr6 -> Ident '[' . Expr ']'                       (rule 63)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 85

State 85

	Stmt -> Ident '[' Expr . ']' '=' Expr               (rule 12)
	Expr6 -> Ident '[' Expr . ']'                       (rule 63)
	Expr -> Expr . '||' Expr                            (rule 76)

	']'            shift, and enter state 139
	'||'           shift, and enter state 59


State 86

	Stmt -> Ident '=' Expr .                            (rule 11)
	Expr -> Expr . '||' Expr                            (rule 76)

	';'            reduce using rule 11
	'else'         reduce using rule 11
	'||'           shift, and enter state 59


State 87

	ListStmt -> Stmt ';' ListStmt .                     (rule 24)

	'end'          reduce using rule 24
	%eof           reduce using rule 24


State 88

	BasicType -> BasicType 'proc_type' '[' . ListArg ']' '(' ListType ')'    (rule 38)

	'&'            shift, and enter state 111
	'&mut'         shift, and enter state 112
	']'            reduce using rule 48
	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'mut'          shift, and enter state 113
	'string'       shift, and enter state 35
	'void'         shift, and enter state 38

	Type           goto state 107
	BasicType      goto state 108
	Arg            goto state 109
	ListArg        goto state 138

State 89

	Stmt -> BasicType 'mut' Ident . '=' Expr            (rule 9)

	'='            shift, and enter state 137


State 90

	BasicType -> BasicType 'lambda_type' '(' . ListType ')'    (rule 37)

	'&'            shift, and enter state 111
	'&mut'         shift, and enter state 112
	')'            reduce using rule 29
	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'mut'          shift, and enter state 113
	'string'       shift, and enter state 35
	'void'         shift, and enter state 38

	Type           goto state 135
	ListType       goto state 136
	BasicType      goto state 108

State 91

	Lambda -> BasicType 'lambda' '(' . ListArg ')' Block    (rule 43)

	'&'            shift, and enter state 111
	'&mut'         shift, and enter state 112
	')'            reduce using rule 48
	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'mut'          shift, and enter state 113
	'string'       shift, and enter state 35
	'void'         shift, and enter state 38

	Type           goto state 107
	BasicType      goto state 108
	Arg            goto state 109
	ListArg        goto state 134

State 92

	Stmt -> BasicType Ident '=' . Expr                  (rule 10)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 133

State 93

	Expr6 -> Expr6 '(' ListExpr . ')'                   (rule 60)

	')'            shift, and enter state 132


State 94

	Expr4 -> Expr4 . MulOp Expr4                        (rule 68)
	Expr4 -> Expr4 MulOp Expr4 .                        (rule 68)

	'!='           reduce using rule 68
	'%'            shift, and enter state 72
			(reduce using rule 68)

	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'*'            shift, and enter state 73
			(reduce using rule 68)

	'+'            reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'/'            shift, and enter state 74
			(reduce using rule 68)

	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	']'            reduce using rule 68
	'else'         reduce using rule 68
	'proc'         reduce using rule 68
	'||'           reduce using rule 68

	MulOp          goto state 71

State 95

	Expr3 -> Expr3 . AddOp Expr3                        (rule 70)
	Expr3 -> Expr3 AddOp Expr3 .                        (rule 70)

	'!='           reduce using rule 70
	'&&'           reduce using rule 70
	')'            reduce using rule 70
	'+'            shift, and enter state 69
			(reduce using rule 70)

	','            reduce using rule 70
	'-'            shift, and enter state 70
			(reduce using rule 70)

	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	']'            reduce using rule 70
	'else'         reduce using rule 70
	'proc'         reduce using rule 70
	'||'           reduce using rule 70

	AddOp          goto state 68

State 96

	Expr2 -> Expr2 . CompOp Expr2                       (rule 72)
	Expr2 -> Expr2 CompOp Expr2 .                       (rule 72)

	'!='           shift, and enter state 62
			(reduce using rule 72)

	'&&'           reduce using rule 72
	')'            reduce using rule 72
	','            reduce using rule 72
	';'            reduce using rule 72
	'<'            shift, and enter state 63
			(reduce using rule 72)

	'<='           shift, and enter state 64
			(reduce using rule 72)

	'=='           shift, and enter state 65
			(reduce using rule 72)

	'>'            shift, and enter state 66
			(reduce using rule 72)

	'>='           shift, and enter state 67
			(reduce using rule 72)

	']'            reduce using rule 72
	'else'         reduce using rule 72
	'proc'         reduce using rule 72
	'||'           reduce using rule 72

	CompOp         goto state 61

State 97

	Expr1 -> Expr1 . '&&' Expr1                         (rule 74)
	Expr1 -> Expr1 '&&' Expr1 .                         (rule 74)

	'&&'           shift, and enter state 60
			(reduce using rule 74)

	')'            reduce using rule 74
	','            reduce using rule 74
	';'            reduce using rule 74
	']'            reduce using rule 74
	'else'         reduce using rule 74
	'proc'         reduce using rule 74
	'||'           reduce using rule 74


State 98

	Expr -> Expr . '||' Expr                            (rule 76)
	Expr -> Expr '||' Expr .                            (rule 76)

	')'            reduce using rule 76
	','            reduce using rule 76
	';'            reduce using rule 76
	']'            reduce using rule 76
	'else'         reduce using rule 76
	'proc'         reduce using rule 76
	'||'           shift, and enter state 59
			(reduce using rule 76)



State 99

	Expr6 -> '(' Expr ')' .                             (rule 57)
	Expr6 -> '(' Expr ')' .                             (rule 64)

	'!='           reduce using rule 64
			(reduce using rule 57)

	'%'            reduce using rule 64
			(reduce using rule 57)

	'&&'           reduce using rule 64
			(reduce using rule 57)

	'('            reduce using rule 64
			(reduce using rule 57)

	')'            reduce using rule 64
			(reduce using rule 57)

	'*'            reduce using rule 64
			(reduce using rule 57)

	'+'            reduce using rule 64
			(reduce using rule 57)

	','            reduce using rule 64
			(reduce using rule 57)

	'-'            reduce using rule 64
			(reduce using rule 57)

	'/'            reduce using rule 64
			(reduce using rule 57)

	';'            reduce using rule 64
			(reduce using rule 57)

	'<'            reduce using rule 64
			(reduce using rule 57)

	'<='           reduce using rule 64
			(reduce using rule 57)

	'=='           reduce using rule 64
			(reduce using rule 57)

	'>'            reduce using rule 64
			(reduce using rule 57)

	'>='           reduce using rule 64
			(reduce using rule 57)

	']'            reduce using rule 64
			(reduce using rule 57)

	'else'         reduce using rule 64
			(reduce using rule 57)

	'proc'         reduce using rule 64
			(reduce using rule 57)

	'||'           reduce using rule 64
			(reduce using rule 57)



State 100

	Expr6 -> '[' ListExpr ']' .                         (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	'('            reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	']'            reduce using rule 62
	'else'         reduce using rule 62
	'proc'         reduce using rule 62
	'||'           reduce using rule 62


State 101

	ListExpr -> Expr ',' . ListExpr                     (rule 80)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	')'            reduce using rule 78
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	']'            reduce using rule 78
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 54
	ListExpr       goto state 131

State 102

	Stmt -> 'def' BasicType Ident . '(' ListArg ')' PBlock    (rule 21)
	Stmt -> 'def' BasicType Ident . '(' ListArg ')' Lambda    (rule 22)

	'('            shift, and enter state 130


State 103

	Block -> 'do' ListStmt 'end' .                      (rule 5)

	'!='           reduce using rule 5
	'%'            reduce using rule 5
	'&&'           reduce using rule 5
	'('            reduce using rule 5
	')'            reduce using rule 5
	'*'            reduce using rule 5
	'+'            reduce using rule 5
	','            reduce using rule 5
	'-'            reduce using rule 5
	'/'            reduce using rule 5
	';'            reduce using rule 5
	'<'            reduce using rule 5
	'<='           reduce using rule 5
	'=='           reduce using rule 5
	'>'            reduce using rule 5
	'>='           reduce using rule 5
	']'            reduce using rule 5
	'else'         reduce using rule 5
	'proc'         reduce using rule 5
	'||'           reduce using rule 5


State 104

	Stmt -> 'for' Expr Proc .                           (rule 18)

	';'            reduce using rule 18
	'else'         reduce using rule 18


State 105

	Stmt -> 'if' '(' Expr . ')' HBlock                  (rule 14)
	Stmt -> 'if' '(' Expr . ')' HBlock 'else' HBlock    (rule 15)
	Expr -> Expr . '||' Expr                            (rule 76)

	')'            shift, and enter state 129
	'||'           shift, and enter state 59


State 106

	Stmt -> 'print' '(' Expr . ')'                      (rule 17)
	Expr -> Expr . '||' Expr                            (rule 76)

	')'            shift, and enter state 128
	'||'           shift, and enter state 59


State 107

	Arg -> Type . Ident                                 (rule 47)

	L_Ident        shift, and enter state 2

	Ident          goto state 127

State 108

	Type -> BasicType .                                 (rule 28)
	BasicType -> BasicType . '[]'                       (rule 32)
	BasicType -> BasicType . 'lambda_type' '(' ListType ')'    (rule 37)
	BasicType -> BasicType . 'proc_type' '[' ListArg ']' '(' ListType ')'    (rule 38)

	')'            reduce using rule 28
	','            reduce using rule 28
	'[]'           shift, and enter state 77
	'lambda_type'  shift, and enter state 79
	'proc_type'    shift, and enter state 81
	L_Ident        reduce using rule 28


State 109

	ListArg -> Arg .                                    (rule 49)
	ListArg -> Arg . ',' ListArg                        (rule 50)

	')'            reduce using rule 49
	','            shift, and enter state 126
	']'            reduce using rule 49


State 110

	Proc -> 'proc' '[' ListArg . ']' '(' ListArg ')' Block    (rule 42)

	']'            shift, and enter state 125


State 111

	Type -> '&' . BasicType                             (rule 25)

	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'string'       shift, and enter state 35
	'void'         shift, and enter state 38

	BasicType      goto state 124

State 112

	Type -> '&mut' . BasicType                          (rule 26)

	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'string'       shift, and enter state 35
	'void'         shift, and enter state 38

	BasicType      goto state 123

State 113

	Type -> 'mut' . BasicType                           (rule 27)

	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'string'       shift, and enter state 35
	'void'         shift, and enter state 38

	BasicType      goto state 122

State 114

	Expr6 -> 'range' '(' Expr . ',' Expr ')'            (rule 51)
	Expr -> Expr . '||' Expr                            (rule 76)

	','            shift, and enter state 121
	'||'           shift, and enter state 59


State 115

	Expr6 -> Ident '[' . Expr ']'                       (rule 63)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 120

State 116

	Expr6 -> 'to_str' '(' Expr . ')'                    (rule 61)
	Expr -> Expr . '||' Expr                            (rule 76)

	')'            shift, and enter state 119
	'||'           shift, and enter state 59


State 117

	Stmt -> 'while' '(' Expr . ')' HBlock               (rule 16)
	Expr -> Expr . '||' Expr                            (rule 76)

	')'            shift, and enter state 118
	'||'           shift, and enter state 59


State 118

	Stmt -> 'while' '(' Expr ')' . HBlock               (rule 16)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'def'          shift, and enter state 25
	'do'           shift, and enter state 26
	'false'        shift, and enter state 27
	'for'          shift, and enter state 28
	'if'           shift, and enter state 29
	'int'          shift, and enter state 30
	'print'        shift, and enter state 31
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'return'       shift, and enter state 34
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	'while'        shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 147
	Integer        goto state 4
	String         goto state 5
	Block          goto state 148
	HBlock         goto state 157
	Stmt           goto state 150
	BasicType      goto state 10
	Proc           goto state 151
	Lambda         goto state 12
	PBlock         goto state 152
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 19

State 119

	Expr6 -> 'to_str' '(' Expr ')' .                    (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	']'            reduce using rule 61
	'else'         reduce using rule 61
	'proc'         reduce using rule 61
	'||'           reduce using rule 61


State 120

	Expr6 -> Ident '[' Expr . ']'                       (rule 63)
	Expr -> Expr . '||' Expr                            (rule 76)

	']'            shift, and enter state 156
	'||'           shift, and enter state 59


State 121

	Expr6 -> 'range' '(' Expr ',' . Expr ')'            (rule 51)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 155

State 122

	Type -> 'mut' BasicType .                           (rule 27)
	BasicType -> BasicType . '[]'                       (rule 32)
	BasicType -> BasicType . 'lambda_type' '(' ListType ')'    (rule 37)
	BasicType -> BasicType . 'proc_type' '[' ListArg ']' '(' ListType ')'    (rule 38)

	')'            reduce using rule 27
	','            reduce using rule 27
	'[]'           shift, and enter state 77
	'lambda_type'  shift, and enter state 79
	'proc_type'    shift, and enter state 81
	L_Ident        reduce using rule 27


State 123

	Type -> '&mut' BasicType .                          (rule 26)
	BasicType -> BasicType . '[]'                       (rule 32)
	BasicType -> BasicType . 'lambda_type' '(' ListType ')'    (rule 37)
	BasicType -> BasicType . 'proc_type' '[' ListArg ']' '(' ListType ')'    (rule 38)

	')'            reduce using rule 26
	','            reduce using rule 26
	'[]'           shift, and enter state 77
	'lambda_type'  shift, and enter state 79
	'proc_type'    shift, and enter state 81
	L_Ident        reduce using rule 26


State 124

	Type -> '&' BasicType .                             (rule 25)
	BasicType -> BasicType . '[]'                       (rule 32)
	BasicType -> BasicType . 'lambda_type' '(' ListType ')'    (rule 37)
	BasicType -> BasicType . 'proc_type' '[' ListArg ']' '(' ListType ')'    (rule 38)

	')'            reduce using rule 25
	','            reduce using rule 25
	'[]'           shift, and enter state 77
	'lambda_type'  shift, and enter state 79
	'proc_type'    shift, and enter state 81
	L_Ident        reduce using rule 25


State 125

	Proc -> 'proc' '[' ListArg ']' . '(' ListArg ')' Block    (rule 42)

	'('            shift, and enter state 154


State 126

	ListArg -> Arg ',' . ListArg                        (rule 50)

	'&'            shift, and enter state 111
	'&mut'         shift, and enter state 112
	')'            reduce using rule 48
	']'            reduce using rule 48
	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'mut'          shift, and enter state 113
	'string'       shift, and enter state 35
	'void'         shift, and enter state 38

	Type           goto state 107
	BasicType      goto state 108
	Arg            goto state 109
	ListArg        goto state 153

State 127

	Arg -> Type Ident .                                 (rule 47)

	')'            reduce using rule 47
	','            reduce using rule 47
	']'            reduce using rule 47


State 128

	Stmt -> 'print' '(' Expr ')' .                      (rule 17)

	';'            reduce using rule 17
	'else'         reduce using rule 17


State 129

	Stmt -> 'if' '(' Expr ')' . HBlock                  (rule 14)
	Stmt -> 'if' '(' Expr ')' . HBlock 'else' HBlock    (rule 15)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'def'          shift, and enter state 25
	'do'           shift, and enter state 26
	'false'        shift, and enter state 27
	'for'          shift, and enter state 28
	'if'           shift, and enter state 29
	'int'          shift, and enter state 30
	'print'        shift, and enter state 31
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'return'       shift, and enter state 34
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	'while'        shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 147
	Integer        goto state 4
	String         goto state 5
	Block          goto state 148
	HBlock         goto state 149
	Stmt           goto state 150
	BasicType      goto state 10
	Proc           goto state 151
	Lambda         goto state 12
	PBlock         goto state 152
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 19

State 130

	Stmt -> 'def' BasicType Ident '(' . ListArg ')' PBlock    (rule 21)
	Stmt -> 'def' BasicType Ident '(' . ListArg ')' Lambda    (rule 22)

	'&'            shift, and enter state 111
	'&mut'         shift, and enter state 112
	')'            reduce using rule 48
	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'mut'          shift, and enter state 113
	'string'       shift, and enter state 35
	'void'         shift, and enter state 38

	Type           goto state 107
	BasicType      goto state 108
	Arg            goto state 109
	ListArg        goto state 146

State 131

	ListExpr -> Expr ',' ListExpr .                     (rule 80)

	')'            reduce using rule 80
	']'            reduce using rule 80


State 132

	Expr6 -> Expr6 '(' ListExpr ')' .                   (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	']'            reduce using rule 60
	'else'         reduce using rule 60
	'proc'         reduce using rule 60
	'||'           reduce using rule 60


State 133

	Stmt -> BasicType Ident '=' Expr .                  (rule 10)
	Expr -> Expr . '||' Expr                            (rule 76)

	';'            reduce using rule 10
	'else'         reduce using rule 10
	'||'           shift, and enter state 59


State 134

	Lambda -> BasicType 'lambda' '(' ListArg . ')' Block    (rule 43)

	')'            shift, and enter state 145


State 135

	ListType -> Type .                                  (rule 30)
	ListType -> Type . ',' ListType                     (rule 31)

	')'            reduce using rule 30
	','            shift, and enter state 144


State 136

	BasicType -> BasicType 'lambda_type' '(' ListType . ')'    (rule 37)

	')'            shift, and enter state 143


State 137

	Stmt -> BasicType 'mut' Ident '=' . Expr            (rule 9)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 142

State 138

	BasicType -> BasicType 'proc_type' '[' ListArg . ']' '(' ListType ')'    (rule 38)

	']'            shift, and enter state 141


State 139

	Stmt -> Ident '[' Expr ']' . '=' Expr               (rule 12)
	Expr6 -> Ident '[' Expr ']' .                       (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	'('            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'='            shift, and enter state 140
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'else'         reduce using rule 63
	'||'           reduce using rule 63


State 140

	Stmt -> Ident '[' Expr ']' '=' . Expr               (rule 12)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'false'        shift, and enter state 27
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 44
	Integer        goto state 4
	String         goto state 5
	BasicType      goto state 45
	Proc           goto state 11
	Lambda         goto state 12
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 166

State 141

	BasicType -> BasicType 'proc_type' '[' ListArg ']' . '(' ListType ')'    (rule 38)

	'('            shift, and enter state 165


State 142

	Stmt -> BasicType 'mut' Ident '=' Expr .            (rule 9)
	Expr -> Expr . '||' Expr                            (rule 76)

	';'            reduce using rule 9
	'else'         reduce using rule 9
	'||'           shift, and enter state 59


State 143

	BasicType -> BasicType 'lambda_type' '(' ListType ')' .    (rule 37)

	')'            reduce using rule 37
	','            reduce using rule 37
	'[]'           reduce using rule 37
	'lambda'       reduce using rule 37
	'lambda_type'  reduce using rule 37
	'mut'          reduce using rule 37
	'proc_type'    reduce using rule 37
	L_Ident        reduce using rule 37


State 144

	ListType -> Type ',' . ListType                     (rule 31)

	'&'            shift, and enter state 111
	'&mut'         shift, and enter state 112
	')'            reduce using rule 29
	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'mut'          shift, and enter state 113
	'string'       shift, and enter state 35
	'void'         shift, and enter state 38

	Type           goto state 135
	ListType       goto state 164
	BasicType      goto state 108

State 145

	Lambda -> BasicType 'lambda' '(' ListArg ')' . Block    (rule 43)

	'do'           shift, and enter state 26

	Block          goto state 163

State 146

	Stmt -> 'def' BasicType Ident '(' ListArg . ')' PBlock    (rule 21)
	Stmt -> 'def' BasicType Ident '(' ListArg . ')' Lambda    (rule 22)

	')'            shift, and enter state 162


State 147

	Stmt -> Ident . '=' Expr                            (rule 11)
	Stmt -> Ident . '[' Expr ']' '=' Expr               (rule 12)
	PBlock -> Ident .                                   (rule 46)
	Expr6 -> Ident .                                    (rule 52)
	Expr6 -> Ident . '[' Expr ']'                       (rule 63)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	'('            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
			(reduce using rule 46)

	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'='            shift, and enter state 83
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'['            shift, and enter state 84
	'else'         reduce using rule 52
			(reduce using rule 46)

	'||'           reduce using rule 52


State 148

	Stmt -> Block .                                     (rule 8)
	PBlock -> Block .                                   (rule 45)

	';'            reduce using rule 45
			(reduce using rule 8)

	'else'         reduce using rule 45
			(reduce using rule 8)



State 149

	Stmt -> 'if' '(' Expr ')' HBlock .                  (rule 14)
	Stmt -> 'if' '(' Expr ')' HBlock . 'else' HBlock    (rule 15)

	';'            reduce using rule 14
	'else'         shift, and enter state 161
			(reduce using rule 14)



State 150

	HBlock -> Stmt .                                    (rule 7)
	Stmt -> Stmt . ';'                                  (rule 20)

	';'            shift, and enter state 160
			(reduce using rule 7)

	'else'         reduce using rule 7


State 151

	PBlock -> Proc .                                    (rule 44)
	Expr6 -> Proc .                                     (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	'('            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
			(reduce using rule 44)

	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'else'         reduce using rule 58
			(reduce using rule 44)

	'||'           reduce using rule 58


State 152

	HBlock -> PBlock .                                  (rule 6)

	';'            reduce using rule 6
	'else'         reduce using rule 6


State 153

	ListArg -> Arg ',' ListArg .                        (rule 50)

	')'            reduce using rule 50
	']'            reduce using rule 50


State 154

	Proc -> 'proc' '[' ListArg ']' '(' . ListArg ')' Block    (rule 42)

	'&'            shift, and enter state 111
	'&mut'         shift, and enter state 112
	')'            reduce using rule 48
	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'mut'          shift, and enter state 113
	'string'       shift, and enter state 35
	'void'         shift, and enter state 38

	Type           goto state 107
	BasicType      goto state 108
	Arg            goto state 109
	ListArg        goto state 159

State 155

	Expr6 -> 'range' '(' Expr ',' Expr . ')'            (rule 51)
	Expr -> Expr . '||' Expr                            (rule 76)

	')'            shift, and enter state 158
	'||'           shift, and enter state 59


State 156

	Expr6 -> Ident '[' Expr ']' .                       (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	'('            reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	']'            reduce using rule 63
	'else'         reduce using rule 63
	'proc'         reduce using rule 63
	'||'           reduce using rule 63


State 157

	Stmt -> 'while' '(' Expr ')' HBlock .               (rule 16)

	';'            reduce using rule 16
	'else'         reduce using rule 16


State 158

	Expr6 -> 'range' '(' Expr ',' Expr ')' .            (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	']'            reduce using rule 51
	'else'         reduce using rule 51
	'proc'         reduce using rule 51
	'||'           reduce using rule 51


State 159

	Proc -> 'proc' '[' ListArg ']' '(' ListArg . ')' Block    (rule 42)

	')'            shift, and enter state 174


State 160

	Stmt -> Stmt ';' .                                  (rule 20)

	';'            reduce using rule 20
	'else'         reduce using rule 20


State 161

	Stmt -> 'if' '(' Expr ')' HBlock 'else' . HBlock    (rule 15)

	'!'            shift, and enter state 20
	'('            shift, and enter state 21
	'-'            shift, and enter state 22
	'['            shift, and enter state 23
	'bool'         shift, and enter state 24
	'def'          shift, and enter state 25
	'do'           shift, and enter state 26
	'false'        shift, and enter state 27
	'for'          shift, and enter state 28
	'if'           shift, and enter state 29
	'int'          shift, and enter state 30
	'print'        shift, and enter state 31
	'proc'         shift, and enter state 32
	'range'        shift, and enter state 33
	'return'       shift, and enter state 34
	'string'       shift, and enter state 35
	'to_str'       shift, and enter state 36
	'true'         shift, and enter state 37
	'void'         shift, and enter state 38
	'while'        shift, and enter state 39
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 40
	L_quoted       shift, and enter state 41

	Ident          goto state 147
	Integer        goto state 4
	String         goto state 5
	Block          goto state 148
	HBlock         goto state 173
	Stmt           goto state 150
	BasicType      goto state 10
	Proc           goto state 151
	Lambda         goto state 12
	PBlock         goto state 152
	Expr6          goto state 13
	Expr5          goto state 14
	Expr4          goto state 15
	Expr3          goto state 16
	Expr2          goto state 17
	Expr1          goto state 18
	Expr           goto state 19

State 162

	Stmt -> 'def' BasicType Ident '(' ListArg ')' . PBlock    (rule 21)
	Stmt -> 'def' BasicType Ident '(' ListArg ')' . Lambda    (rule 22)

	'bool'         shift, and enter state 24
	'do'           shift, and enter state 26
	'int'          shift, and enter state 30
	'proc'         shift, and enter state 32
	'string'       shift, and enter state 35
	'void'         shift, and enter state 38
	L_Ident        shift, and enter state 2

	Ident          goto state 168
	Block          goto state 169
	BasicType      goto state 45
	Proc           goto state 170
	Lambda         goto state 171
	PBlock         goto state 172

State 163

	Lambda -> BasicType 'lambda' '(' ListArg ')' Block .    (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	']'            reduce using rule 43
	'else'         reduce using rule 43
	'proc'         reduce using rule 43
	'||'           reduce using rule 43


State 164

	ListType -> Type ',' ListType .                     (rule 31)

	')'            reduce using rule 31


State 165

	BasicType -> BasicType 'proc_type' '[' ListArg ']' '(' . ListType ')'    (rule 38)

	'&'            shift, and enter state 111
	'&mut'         shift, and enter state 112
	')'            reduce using rule 29
	'bool'         shift, and enter state 24
	'int'          shift, and enter state 30
	'mut'          shift, and enter state 113
	'string'       shift, and enter state 35
	'void'         shift, and enter state 38

	Type           goto state 135
	ListType       goto state 167
	BasicType      goto state 108

State 166

	Stmt -> Ident '[' Expr ']' '=' Expr .               (rule 12)
	Expr -> Expr . '||' Expr                            (rule 76)

	';'            reduce using rule 12
	'else'         reduce using rule 12
	'||'           shift, and enter state 59


State 167

	BasicType -> BasicType 'proc_type' '[' ListArg ']' '(' ListType . ')'    (rule 38)

	')'            shift, and enter state 176


State 168

	PBlock -> Ident .                                   (rule 46)

	';'            reduce using rule 46
	'else'         reduce using rule 46


State 169

	PBlock -> Block .                                   (rule 45)

	';'            reduce using rule 45
	'else'         reduce using rule 45


State 170

	PBlock -> Proc .                                    (rule 44)

	';'            reduce using rule 44
	'else'         reduce using rule 44


State 171

	Stmt -> 'def' BasicType Ident '(' ListArg ')' Lambda .    (rule 22)

	';'            reduce using rule 22
	'else'         reduce using rule 22


State 172

	Stmt -> 'def' BasicType Ident '(' ListArg ')' PBlock .    (rule 21)

	';'            reduce using rule 21
	'else'         reduce using rule 21


State 173

	Stmt -> 'if' '(' Expr ')' HBlock 'else' HBlock .    (rule 15)

	';'            reduce using rule 15
	'else'         reduce using rule 15


State 174

	Proc -> 'proc' '[' ListArg ']' '(' ListArg ')' . Block    (rule 42)

	'do'           shift, and enter state 26

	Block          goto state 175

State 175

	Proc -> 'proc' '[' ListArg ']' '(' ListArg ')' Block .    (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	']'            reduce using rule 42
	'else'         reduce using rule 42
	'proc'         reduce using rule 42
	'||'           reduce using rule 42


State 176

	BasicType -> BasicType 'proc_type' '[' ListArg ']' '(' ListType ')' .    (rule 38)

	')'            reduce using rule 38
	','            reduce using rule 38
	'[]'           reduce using rule 38
	'lambda'       reduce using rule 38
	'lambda_type'  reduce using rule 38
	'mut'          reduce using rule 38
	'proc_type'    reduce using rule 38
	L_Ident        reduce using rule 38


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 92
Number of terminals: 49
Number of non-terminals: 29
Number of states: 177
